<Window x:Class="ScreenToGif.Windows.Editor" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:n="clr-namespace:ScreenToGif.Controls"
        xmlns:u="clr-namespace:ScreenToGif.Util"
        xmlns:c="clr-namespace:ScreenToGif.Util.Converters"
        xmlns:uc="clr-namespace:ScreenToGif.Windows.UserControls"
        x:Name="EditorWindow" Title="{DynamicResource Editor.Title}" MinHeight="500" MinWidth="700" 
        Background="#FFF1F1F1" UseLayoutRounding="True" Icon="/Resources/Logo.ico"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}"
        Loaded="Window_Loaded" Closing="Window_Closing" Activated="Window_Activated" KeyUp="Window_KeyUp" 
        Deactivated="Window_Deactivated">

    <Window.Resources>
        <c:DoubleToInt x:Key="DoubleToIntConverter"/>
        <c:InvertedBool x:Key="InvertedBoolConverter"/>
        <c:InvertedVisibility x:Key="InvertedVisibilityConverter"/>
        <c:MaximumValue x:Key="MaximumValueConverter"/>
        <c:DoubleTimesAHundredToInt x:Key="DoubleTimesAHundredToIntConverter"/>
        <c:UriToBitmap x:Key="UriToBitmapConverter"/>
        <c:PathToFilename x:Key="PathToFilenameConverter"/>
        <c:DoubleToThickness x:Key="DoubleToThicknessConverter"/>
        <c:RoutedCommandToInputGestureTextConverter x:Key="CommandToInputGestureTextConverter"/>
        <c:FontToSupportedGliph x:Key="FontToSupportedGliphConverter"/>
        <c:InvertedBool x:Key="InvertedBool"/>
        <c:InvertedBoolToVisibility x:Key="InvertedBoolToVisibility"/>
        <c:EnumToBool x:Key="EnumToBool"/>
        <c:EnumToVisibility x:Key="EnumToVisibility"/>
        <c:IntToVisibility x:Key="IntToVisibility"/>
        <c:FormatConverter x:Key="FormatConverter"/>
        <c:BoolOrToVisibility x:Key="BoolOrToVisibility"/>
        <c:BoolAndToVisibility x:Key="BoolAndToVisibility"/>
        <BooleanToVisibilityConverter x:Key="Bool2VisibilityConverterGeneric" />

        <Storyboard x:Key="ShowPanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="280" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="280" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=ActionGrid,Path=Opacity}" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="ShowExtendedPanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="300" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="300" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=ActionGrid,Path=Opacity}" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HidePanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=ActionGrid,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideOverlayGridStoryboard">
            <DoubleAnimation Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=OverlayGrid,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:1" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowOverlayGridStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="ShowHintStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1.5">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <DoubleAnimation Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Opacity" From="{Binding ElementName=HintStackPanel,Path=Opacity}" To="0" BeginTime="0:0:7" Duration="0:0:3">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Visibility" BeginTime="0:0:7" Duration="0:0:3">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:3"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowPermanentHintStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1.5">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideHintStoryboard">
            <DoubleAnimation Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=HintStackPanel,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Visibility" Duration="0:0:1">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <CollectionViewSource x:Key="MyFonts" x:Shared="False" 
                              Source="{Binding Source={x:Static Fonts.SystemFontFamilies}, Converter={StaticResource FontToSupportedGliphConverter}}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="Source"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <DataTemplate x:Key="FontTemplate">
            <!--x:Shared="False"-->
            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                <TextBlock FontFamily="{Binding .}" FontSize="16" Text="{Binding .}" ToolTip="{Binding Path=Source}" />
            </VirtualizingStackPanel>
        </DataTemplate>
    </Window.Resources>

    <Window.CommandBindings>
        <!--New-->
        <CommandBinding Command="u:Commands.NewRecording" CanExecute="NewRecording_CanExecute" Executed="NewRecording_Executed"/>
        
        <!--File-->
        <CommandBinding Command="u:Commands.SaveAs" CanExecute="Save_CanExecute" Executed="Save_Executed"/>
        
        <!--Action Stack-->
        <CommandBinding Command="Undo" CanExecute="Undo_CanExecute" Executed="Undo_Executed"/>
        <CommandBinding Command="u:Commands.Reset" CanExecute="Reset_CanExecute" Executed="Reset_Executed"/>
        <CommandBinding Command="Redo" CanExecute="Redo_CanExecute" Executed="Redo_Executed"/>

        <!--Zoom-->
        <CommandBinding Command="u:Commands.Zoom100" CanExecute="Zoom_CanExecute" Executed="Zoom100_Executed"/>

        <!--Playback-->
        <CommandBinding Command="u:Commands.FirstFrame" CanExecute="Playback_CanExecute" Executed="FirstFrame_Executed"/>
        <CommandBinding Command="u:Commands.PreviousFrame" CanExecute="Playback_CanExecute" Executed="PreviousFrame_Executed"/>
        <CommandBinding Command="u:Commands.Play" CanExecute="Playback_CanExecute" Executed="Play_Executed"/>
        <CommandBinding Command="u:Commands.NextFrame" CanExecute="Playback_CanExecute" Executed="NextFrame_Executed"/>
        <CommandBinding Command="u:Commands.LastFrame" CanExecute="Playback_CanExecute" Executed="LastFrame_Executed"/>

        <!--Frames-->
        <CommandBinding Command="u:Commands.DeletePrevious" CanExecute="DeletePrevious_CanExecute" Executed="DeletePrevious_Executed"/>
        <CommandBinding Command="u:Commands.DeleteNext" CanExecute="DeleteNext_CanExecute" Executed="DeleteNext_Executed"/>
        
    </Window.CommandBindings>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="{DynamicResource Editor.Title}">
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <Grid x:Name="MainGrid" DataContext="{Binding ElementName=FrameListView, Path=SelectedItem}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <uc:EditorMenu Grid.Row="0" x:Name="Menu"></uc:EditorMenu>

        <!--Hack for the extended title bar-->
        <Grid Grid.Row="1" Grid.RowSpan="3" Background="#FFF1F1F1"/>

        <!--Middle of the Window-->
        <Grid Grid.Row="1" x:Name="MiddleGrid" Background="{StaticResource Checker.DrawingBrush}" 
              IsEnabled="{Binding Path=IsLoading, ElementName=EditorWindow, Converter={StaticResource InvertedBoolConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <n:StatusList Grid.Row="0" x:Name="StatusList"/>

            <n:ZoomBox Grid.Row="1" x:Name="ZoomBoxControl" Background="Transparent" ClipToBounds="True" 
                       Focusable="False" IsTabStop="False" PreviewMouseWheel="ZoomBox_MouseWheel">
                <n:ZoomBox.ContextMenu>
                    <ContextMenu>
                        <n:ImageMenuItem x:Name="PlayMenuItem" Header="{DynamicResource Editor.Playback.Play}" Image="{StaticResource Vector.Play}" ContentHeight="16" ContentWidth="16" Command="u:Commands.Play"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Editor.Home.Undo}" Image="{StaticResource Vector.Undo}" ContentHeight="16" ContentWidth="16" Command="Undo"/>
                        <n:ImageMenuItem Header="{DynamicResource Editor.Home.Redo}" Image="{StaticResource Vector.Redo}" ContentHeight="16" ContentWidth="16" Command="Redo"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Context.SaveAs}" Image="{StaticResource Vector.Gif}" ContentHeight="16" ContentWidth="16" Command="u:Commands.SaveAs"/>
                        <n:ImageMenuItem Header="{DynamicResource Recorder.Discard}" Image="{StaticResource Vector.Remove}" ContentHeight="16" ContentWidth="16" Command="u:Commands.DiscardProject"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Context.RemoveFrames}" Image="{StaticResource Vector.RemoveImage}" ContentHeight="16" ContentWidth="16" Command="Delete"/>
                    </ContextMenu>
                </n:ZoomBox.ContextMenu>
            </n:ZoomBox>

            <ScrollViewer Grid.Row="1" x:Name="MainScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
                          PreviewMouseWheel="ZoomBox_MouseWheel" Visibility="{Binding Path=Visibility, ElementName=OverlayGrid}">
                <Grid x:Name="OverlayGrid" Visibility="Collapsed" Opacity="0">

                    <Grid x:Name="ProgressOverlayGrid" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                          Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=100}" MinWidth="10" 
                          Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=30}" MinHeight="10"
                           Background="Transparent">

                        <Grid>
                            <Rectangle Name="ProgressHorizontalRectangle" 
                                       Height="30"
                                       Fill="LightGreen" 
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"/>
                        </Grid>
                        
                    </Grid>                    
                </Grid>
            </ScrollViewer>
        </Grid>

        <!--Lower part of the Window-->
        <ListView Grid.Row="2" x:Name="FrameListView" BorderThickness="0,1,0,0" IsTabStop="False" Focusable="False"
                  PreviewKeyDown="FrameListView_OnPreviewKeyDown"
                  ItemsSource="{Binding ElementName=EditorWindow, Path=Stack.Project.Frames}"
                  IsEnabled="{Binding Path=IsLoading, ElementName=EditorWindow, Converter={StaticResource InvertedBoolConverter}}"
                  Visibility="{Binding RelativeSource={RelativeSource Self}, Path=HasItems, Converter={StaticResource Bool2Visibility}}">

            <ListView.Resources>
                <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
                <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
                <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
                <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>

                <Style TargetType="{x:Type ListView}">
                    <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>

                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal" MinHeight="0" VirtualizationMode="Recycling" IsVirtualizing="True"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListView}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" Padding="2" SnapsToDevicePixels="true">
                                    <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" CanContentScroll="True">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsGrouping" Value="true"/>
                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="Bd" BorderBrush="Transparent" BorderThickness="1" Background="Transparent"
                            Padding="4,1" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <!--MaxWidth="{TemplateBinding MaxSize}"-->
                            <Viewbox x:Name="ViewBoxInternal" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                   Margin="2,0,2,0" Stretch="UniformToFill" StretchDirection="Both" Effect="{x:Null}">
                                <ContentPresenter Content="{Binding Value.FullPath}" SnapsToDevicePixels="True" Width="Auto" Height="Auto"/>
                            </Viewbox>
                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              Margin="5,0,0,0" 
                                              VerticalAlignment="Center"/>
                            <Label Grid.Column="2" Content="{Binding Value.Author}" Foreground="#FF858585" Margin="5,0,0,0" HorizontalAlignment="Left"/>
                            <!--MaxWidth="{TemplateBinding MaxSize}"-->
                            <Viewbox Grid.Column="3" x:Name="SelectionMark" VerticalAlignment="Center" HorizontalAlignment="Center"
                                     Margin="2,0,2,0" Stretch="UniformToFill" StretchDirection="Both"
                                     Effect="{x:Null}">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,.8 L 4.6983,9.09834  L 1,5.19331 L 1.27664,3.52165 L 4.255,6.08833 L 9.33331,1.288e-005 Z" Fill="#FF858585" Margin="1" Stretch="None" 
                                      Visibility="{Binding Path=IsSelected, 
                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }},
                                    Converter={StaticResource Bool2VisibilityConverterGeneric}}"/>
                            </Viewbox>
                            <Grid.ToolTip>
                                <ToolTip Content="{TemplateBinding Tag}" />
                            </Grid.ToolTip>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>

            <!--<ListView.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="Item_PreviewMouseLeftButtonDown"/>                    
                </Style>
            </ListView.ItemContainerStyle>-->
        </ListView>

        <!--Status bar-->
        <Border Grid.Row="3" x:Name="LowerGrid" Height="20">
            <Grid x:Name="LowerStatusBar" Height="20" Background="#FFF1F1F1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="7"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="StatusGrid" Grid.Column="0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" x:Name="StatusLabel" Content="Status" Padding="0" VerticalContentAlignment="Center" Margin="5,0" Foreground="#FF3C3C3C"/>
                    <ProgressBar Grid.Column="1" x:Name="StatusProgressBar" Height="8" Width="200" Margin="2,0" VerticalAlignment="Center"/>
                </Grid>

                <Separator Grid.Column="1" Width="1" Margin="3,2"/>

                <StackPanel Grid.Column="2" x:Name="HintStackPanel" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Center" Visibility="Collapsed" ToolTip="{Binding ElementName=HintTextBlock, Path=Text}">
                    <Viewbox Child="{StaticResource Vector.Info}" Height="14" Margin="0,0,8,0" VerticalAlignment="Center"/>
                    <TextBlock x:Name="HintTextBlock" Foreground="DarkGreen" FontSize="13" VerticalAlignment="Center" Margin="0,-1,0,0" TextTrimming="CharacterEllipsis" TextDecorations="{x:Null}"/>
                </StackPanel>

                <Separator Grid.Column="3" Width="1" Margin="1,2" />

                <StackPanel Grid.Column="4" Orientation="Horizontal" 
                            ToolTip="{DynamicResource Editor.Home.Zoom}">
                    <Viewbox Child="{StaticResource Vector.Zoom}" Height="16"/>
                    <n:IntegerUpDown Margin="1" Minimum="5" Maximum="500" Style="{StaticResource IntegerUpDown.Minimal}"
                                     Value="{Binding Zoom, Converter={StaticResource IntToDecimalConverter}, ElementName=ZoomBoxControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="%" VerticalAlignment="Center" Foreground="#FF707070"/>
                </StackPanel>

                <Separator Grid.Column="5" Width="1" Margin="1,2" />

                <Grid Grid.Column="6" x:Name="InfoGrid" 
                      ToolTip="{DynamicResource Editor.FrameNumbersInfo}" ToolTipService.Placement="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{Binding ElementName=FrameListView, Path=Items.Count}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FF00A000" Margin="3,0,3,0"/>
                    <Label Grid.Column="1" Content="{Binding ElementName=FrameListView, Path=SelectedItems.Count}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FFC80000" Margin="3,0,3,0"/>
                    <Label Grid.Column="2" Content="{Binding ElementName=FrameListView, Path=SelectedIndex}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FF0064C8" Margin="3,0,3,0"/>
                </Grid>

                <Separator Grid.Column="7" Width="1" Margin="1,2"/>

                <Grid Grid.Column="8" x:Name="CommandGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>

                    <n:ImageButton Grid.Column="0" x:Name="FirstRepeatButton" Content="{StaticResource Vector.First.Green}" ContentHeight="12"
                                   Width="40" Text="" Style="{StaticResource Style.Button.NoText}" Command="u:Commands.FirstFrame"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageRepeatButton Grid.Column="1" x:Name="PreviousRepeatButton" Content="{StaticResource Vector.Previous.Green}" MaxSize="18"
                                         Width="40" Text="" Style="{StaticResource Style.RepeatButton.NoText}" Command="u:Commands.PreviousFrame"
                                         ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                         ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageButton Grid.Column="2" x:Name="PlayPauseButton" Content="{StaticResource Vector.Play}" ContentHeight="15"
                                   Width="40" Style="{StaticResource Style.Button.NoText}" Command="u:Commands.Play"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageRepeatButton Grid.Column="3" x:Name="NextRepeatButton" Content="{StaticResource Vector.Next.Green}" MaxSize="18"
                                         Width="40" Style="{StaticResource Style.RepeatButton.NoText}" Command="u:Commands.NextFrame"
                                         ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                         ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageButton Grid.Column="4" x:Name="LastRepeatButton" Content="{StaticResource Vector.Last.Green}" ContentHeight="12"
                                   Width="40" Style="{StaticResource Style.Button.NoText}" Command="u:Commands.LastFrame"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>