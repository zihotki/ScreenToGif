<UserControl x:Class="ScreenToGif.Windows.UserControls.OptionsSave"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
            xmlns:n="clr-namespace:ScreenToGif.Controls"
            xmlns:l="clr-namespace:ScreenToGif.Windows"
            xmlns:u="clr-namespace:ScreenToGif.Util"
            xmlns:c="clr-namespace:ScreenToGif.Util.Converters"
            xmlns:s="clr-namespace:System;assembly=mscorlib"
            xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
            xmlns:h="clr-namespace:ScreenToGif.Controls.Shapes"
            xmlns:uc="clr-namespace:ScreenToGif.Windows.UserControls"
             xmlns:local="clr-namespace:ScreenToGif.Windows.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <c:DoubleToInt x:Key="DoubleToIntConverter"/>
        <c:InvertedBool x:Key="InvertedBoolConverter"/>
        <c:InvertedVisibility x:Key="InvertedVisibilityConverter"/>
        <c:MaximumValue x:Key="MaximumValueConverter"/>
        <c:DoubleTimesAHundredToInt x:Key="DoubleTimesAHundredToIntConverter"/>
        <c:UriToBitmap x:Key="UriToBitmapConverter"/>
        <c:PathToFilename x:Key="PathToFilenameConverter"/>
        <c:DoubleToThickness x:Key="DoubleToThicknessConverter"/>
        <c:SelectionToEditingMode x:Key="SelectionToEditingModeConverter"/>
        <c:SelectionToDrawingAttributes x:Key="SelectionToDrawingAttributesConverter"/>
        <c:SelectionToStylusShape x:Key="SelectionToStylusShapeConverter"/>
        <c:StylusTipToBool x:Key="StylusTipToBoolConverter"/>
        <c:RoutedCommandToInputGestureTextConverter x:Key="CommandToInputGestureTextConverter"/>
        <c:FontToSupportedGliph x:Key="FontToSupportedGliphConverter"/>
        <c:InvertedBool x:Key="InvertedBool"/>
        <c:InvertedBoolToVisibility x:Key="InvertedBoolToVisibility"/>
        <c:EnumToBool x:Key="EnumToBool"/>
        <c:EnumToVisibility x:Key="EnumToVisibility"/>
        <c:IntToVisibility x:Key="IntToVisibility"/>
        <c:FormatConverter x:Key="FormatConverter"/>
        <c:BoolOrToVisibility x:Key="BoolOrToVisibility"/>
        <c:BoolAndToVisibility x:Key="BoolAndToVisibility"/>
        <c:BoolOrAndToVisibility x:Key="BoolOrAndToVisibility"/>
    </UserControl.Resources>
    
    <Grid x:Name="ActionGrid" Width="0" Background="#FFFAFAFA" Effect="{StaticResource Shadow.Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--Title-->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>

            <Viewbox Grid.Column="0" x:Name="ActionViewBox" Margin="5,3,0,3" MinWidth="20" MaxHeight="20" Stretch="Uniform" 
                             Child="{StaticResource Vector.Info}" />

            <Label Grid.Column="1" x:Name="ActionTitleLabel" Content="Title" Padding="5,0,0,0" VerticalAlignment="Center"/>

            <n:ImageButton Grid.Column="2" x:Name="HideButton" Content="{DynamicResource Vector.Close}" ContentHeight="16" HorizontalContentAlignment="Center" HorizontalAlignment="Center"
                                   Style="{DynamicResource Style.Button.NoText}" MinWidth="30" Command="u:Commands.CancelAction">
                <n:ImageButton.ToolTip>
                    <ToolTip Content="{DynamicResource Action.Hide}" Placement="Top" HorizontalOffset="-5"/>
                </n:ImageButton.ToolTip>
            </n:ImageButton>
        </Grid>

        <!--Content-->
        <ScrollViewer Grid.Row="1" x:Name="ActionScrollViewer" VerticalScrollBarVisibility="Auto">
            <Grid x:Name="ActionInternalGrid">
                <Grid x:Name="NewGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Size}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource ImportVideo.Width}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="NewImageWidthNumericUpDown" Minimum="10" Maximum="2000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=NewAnimationWidth, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource ImportVideo.Height}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="NewImageHeightNumericUpDown" Minimum="10" Maximum="2000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=NewAnimationHeight, Mode=TwoWay}"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Background}"/>
                    <Grid Grid.Row="3" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Color}" VerticalAlignment="Center" Padding="0"/>
                        <n:ColorBox Grid.Row="1" Grid.Column="1" SelectedColor="{Binding NewAnimationColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,3"/>
                    </Grid>
                </Grid>

                <Grid x:Name="SaveGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Expander Grid.Row="0" Header="{DynamicResource S.SaveAs.Type}" IsExpanded="{Binding IsSaveTypeExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="GifRadioButton" Content="{StaticResource Vector.Gif}" Text="{DynamicResource S.SaveAs.Gif}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Gif}}"
                                                        Checked="SaveType_Checked"/>

                            <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="ApngRadioButton" Content="{StaticResource Vector.Apng}" Text="{DynamicResource S.SaveAs.Apng}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Apng}}"
                                                        Checked="SaveType_Checked"/>

                            <n:ImageRadioButton Grid.Row="1" Grid.Column="0" x:Name="VideoRadioButton" Content="{StaticResource Vector.Video}" Text="{DynamicResource S.SaveAs.Video}"
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Video}}"
                                                        Checked="SaveType_Checked"/>

                            <n:ImageRadioButton Grid.Row="1" Grid.Column="1" x:Name="ProjectRadioButton" Content="{StaticResource Vector.Project}" Text="{DynamicResource S.SaveAs.Project}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Project}}"
                                                        Checked="SaveType_Checked"/>

                            <n:ImageRadioButton Grid.Row="2" Grid.Column="0" x:Name="ImagesRadioButton" Content="{StaticResource Vector.ImageStack}" Text="{DynamicResource S.SaveAs.Images}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Images}}"
                                                        Checked="SaveType_Checked"/>

                            <n:ImageRadioButton Grid.Row="2" Grid.Column="1" x:Name="PsdRadioButton" Content="{StaticResource Vector.Psd}" Text="{DynamicResource S.SaveAs.Psd}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Photoshop}}"
                                                        Checked="SaveType_Checked"/>
                        </Grid>
                    </Expander>


                    <n:LabelSeparator Grid.Row="1" x:Name="EncoderLabelSeparator" Text="{DynamicResource S.SaveAs.Encoder}" Height="27">
                        <n:LabelSeparator.Visibility>
                            <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                <Binding ElementName="GifRadioButton" Path="IsChecked"/>
                                <Binding ElementName="ApngRadioButton" Path="IsChecked"/>
                                <Binding ElementName="VideoRadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:LabelSeparator.Visibility>
                    </n:LabelSeparator>
                    <WrapPanel Grid.Row="2" Margin="10,0,0,0" Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}">
                        <n:ImageRadioButton x:Name="NewEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.ScreenToGif}" 
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.ScreenToGif}}"
                                                    ToolTip="{DynamicResource S.SaveAs.Encoder.ScreenToGif.Tooltip}"/>
                        <Separator Width="1"/>
                        <n:ImageRadioButton x:Name="LegacyEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Legacy}" 
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.Legacy}}"
                                                    ToolTip="{DynamicResource S.SaveAs.Encoder.Legacy.Tooltip}"/>
                        <Separator Width="1"/>
                        <n:ImageRadioButton x:Name="PaintNetEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.System}"
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.PaintNet}}"
                                                    ToolTip="{DynamicResource S.SaveAs.Encoder.System.Tooltip}"/>
                        <Separator Width="1"/>
                        <n:ImageRadioButton x:Name="FfmpegGifEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Ffmpeg}"
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.FFmpeg}}"/>
                        <Separator Width="1"/>
                        <n:ImageRadioButton x:Name="GifskiGifEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Gifski}"
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.Gifski}}"/>
                    </WrapPanel>

                    <WrapPanel Grid.Row="2" Margin="10,0,0,0" Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}">
                        <n:ImageRadioButton x:Name="NormalApngEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Apng}" 
                                                    IsChecked="{Binding ApngEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:ApngEncoderType.ScreenToGif}}"
                                                    ToolTip="{DynamicResource S.SaveAs.Encoder.Apng.Tooltip}"/>
                        <Separator Width="1"/>
                        <n:ImageRadioButton x:Name="FfmpegApngEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Ffmpeg}"
                                                    IsChecked="{Binding ApngEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:ApngEncoderType.FFmpeg}}"/>
                    </WrapPanel>

                    <WrapPanel Grid.Row="2" Margin="10,0,0,0" Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}">
                        <n:ImageRadioButton x:Name="SystemEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.System}"
                                                    IsChecked="{Binding VideoEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:VideoEncoderType.AviStandalone}}"
                                                    Checked="VideoEncoderRadioButton_Checked"/>
                        <Separator Width="1"/>
                        <n:ImageRadioButton x:Name="FfmpegEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Ffmpeg}"
                                                    IsChecked="{Binding VideoEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:VideoEncoderType.Ffmpg}}"
                                                    Checked="VideoEncoderRadioButton_Checked"/>
                    </WrapPanel>


                    <n:LabelSeparator Grid.Row="3" Text="{DynamicResource S.SaveAs.ImagesOptions}" Height="27" Visibility="{Binding ElementName=ImagesRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    <WrapPanel Grid.Row="4" Margin="10,0,0,0" Orientation="Vertical" Visibility="{Binding ElementName=ImagesRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                        <n:ExtendedCheckBox x:Name="ZipImagesCheckBox" Text="{DynamicResource S.SaveAs.ImageOptions.Zip}"
                                                    IsChecked="{Binding ZipImages, Source={x:Static u:UserSettings.All}}" Margin="3"
                                                    Checked="SaveType_Checked" Unchecked="SaveType_Checked"/>
                    </WrapPanel>


                    <Expander Grid.Row="3" Header="{DynamicResource S.SaveAs.GifOptions}" Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}"
                                      IsExpanded="{Binding IsGifOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.SaveAs.Quality}" VerticalAlignment="Center" Margin="10,3,3,3"
                                           Padding="0">
                                <Label.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                        <Binding Path="IsChecked" ElementName="LegacyEncoderRadioButton"/>
                                        <Binding Path="IsChecked" ElementName="GifskiGifEncoderRadioButton"/>
                                    </MultiBinding>
                                </Label.Visibility>
                            </Label>

                            <Slider Grid.Row="0" Grid.Column="1" x:Name="QualitySlider" Margin="3,5" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" 
                                            Minimum="1" Maximum="20" Value="{Binding Quality, Mode=TwoWay, Source={x:Static u:UserSettings.All}}" 
                                            SmallChange="1" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                            Visibility="{Binding IsChecked, ElementName=LegacyEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <Slider Grid.Row="0" Grid.Column="1" x:Name="GifskiQualitySlider" Margin="3,5" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" 
                                            Minimum="2" Maximum="100" Value="{Binding GifskiQuality, Mode=TwoWay, Source={x:Static u:UserSettings.All}}" 
                                            SmallChange="1" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                            Visibility="{Binding IsChecked, ElementName=GifskiGifEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.SaveAs.GifOptions.Colors}" VerticalAlignment="Center" Padding="0" Margin="10,3,3,3"
                                           Visibility="{Binding IsChecked, ElementName=NewEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                            <n:IntegerUpDown Grid.Row="1" Grid.Column="1" Margin="5" Width="80" Minimum="2" Maximum="256" HorizontalAlignment="Left"
                                                     Value="{Binding MaximumColors, Source={x:Static u:UserSettings.All}, Mode=TwoWay}" ToolTip="{DynamicResource S.SaveAs.GifOptions.Colors.Info}"
                                                     Visibility="{Binding IsChecked, ElementName=NewEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <n:ExtendedCheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Name="LoopedCheckBox" Text="{DynamicResource S.SaveAs.GifOptions.LoopedGif}" 
                                                        IsChecked="{Binding Looped, Source={x:Static u:UserSettings.All}}" Margin="10,3,3,3">
                                <n:ExtendedCheckBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                        <Binding Path="IsChecked" ElementName="NewEncoderRadioButton"/>
                                        <Binding Path="IsChecked" ElementName="LegacyEncoderRadioButton"/>
                                        <Binding Path="IsChecked" ElementName="PaintNetEncoderRadioButton"/>
                                    </MultiBinding>
                                </n:ExtendedCheckBox.Visibility>
                            </n:ExtendedCheckBox>

                            <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                                <Grid.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolAndToVisibility}">
                                        <Binding Path="IsChecked" ElementName="LoopedCheckBox"/>
                                        <Binding Path="IsChecked" ElementName="FfmpegGifEncoderRadioButton" Converter="{StaticResource InvertedBool}"/>
                                    </MultiBinding>
                                </Grid.Visibility>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="RepeatForeverCheckBox" Margin="20,3,3,3"
                                                            Text="{DynamicResource S.SaveAs.GifOptions.RepeatForever}" IsChecked="{Binding RepeatForever, Source={x:Static u:UserSettings.All}}"/>

                                <n:IntegerUpDown Grid.Row="1" Grid.Column="0" x:Name="RepeatCountNumericUpDown" Margin="20,3,3,3" StepValue="1" Minimum="1" Maximum="100" 
                                                         Value="{Binding Source={x:Static u:UserSettings.All}, Path=RepeatCount, Mode=TwoWay}" MinWidth="45" 
                                                         IsEnabled="{Binding IsChecked, ElementName=RepeatForeverCheckBox, Converter={StaticResource InvertedBool}}"
                                                         Visibility="{Binding IsChecked, ElementName=GifskiGifEncoderRadioButton, Converter={StaticResource InvertedBoolToVisibility}}"/>
                                <Label Margin="0,3" Grid.Column="1" Content="{DynamicResource S.SaveAs.GifOptions.RepeatCount}" Grid.Row="1" Foreground="#FF444444" 
                                               IsEnabled="{Binding IsChecked, ElementName=RepeatForeverCheckBox, Converter={StaticResource InvertedBool}}"
                                               Visibility="{Binding IsChecked, ElementName=GifskiGifEncoderRadioButton, Converter={StaticResource InvertedBoolToVisibility}}"/>
                            </Grid>

                            <n:ExtendedCheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" x:Name="DetectCheckBox" Margin="10,3,3,3" Text="{DynamicResource S.SaveAs.GifOptions.DetectUnchanged}" 
                                                        IsChecked="{Binding DetectUnchanged, Source={x:Static u:UserSettings.All}}">
                                <n:ExtendedCheckBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                        <Binding ElementName="NewEncoderRadioButton" Path="IsChecked"/>
                                        <Binding ElementName="LegacyEncoderRadioButton" Path="IsChecked"/>
                                    </MultiBinding>
                                </n:ExtendedCheckBox.Visibility>
                            </n:ExtendedCheckBox>

                            <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding Visibility, ElementName=DetectCheckBox}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" x:Name="PaintTransparentCheckBox" Text="{DynamicResource S.SaveAs.GifOptions.PaintWithDummy}" 
                                                            IsChecked="{Binding PaintTransparent, Source={x:Static u:UserSettings.All}}" Margin="20,3,3,3"
                                                            Visibility="{Binding IsChecked, ElementName=DetectCheckBox, Converter={StaticResource Bool2Visibility}}"/>

                                <n:ImageButton Grid.Row="1" Text="{DynamicResource S.SaveAs.GifOptions.SelectDummyColor}" MaxSize="20" Margin="30,3,3,3"
                                                       Visibility="{Binding IsChecked, ElementName=PaintTransparentCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                       HorizontalAlignment="Left" MinHeight="25" Padding="2" Click="TransparentColorButton_Click">
                                    <n:ImageButton.Content>
                                        <Border Background="{Binding ChromaKey, Source={x:Static u:UserSettings.All}, Converter={StaticResource ColorToBrush}}" 
                                                        BorderThickness="1" BorderBrush="#FFABABAB" Height="20" Width="20"/>
                                    </n:ImageButton.Content>
                                </n:ImageButton>
                            </Grid>

                            <Label Grid.Row="6" Grid.Column="0" Content="{DynamicResource S.SaveAs.Extras}" VerticalAlignment="Center" Padding="0" Margin="10,3,3,3"
                                           Visibility="{Binding IsChecked, ElementName=FfmpegGifEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <n:ExtendedTextBox Grid.Row="6" Grid.Column="1" MinHeight="23" Margin="5,3" Text="{Binding Source={x:Static u:UserSettings.All}, Path=ExtraParametersGif}"
                                                       Visibility="{Binding IsChecked, ElementName=FfmpegGifEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow"/>
                        </Grid>
                    </Expander>


                    <Expander Grid.Row="3" Header="{DynamicResource S.SaveAs.ApngOptions}" Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}"
                                      IsExpanded="{Binding IsApngOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedCheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="LoopedApngCheckBox" Text="{DynamicResource S.SaveAs.GifOptions.LoopedApng}" 
                                                        IsChecked="{Binding Looped, Source={x:Static u:UserSettings.All}}" Margin="10,3,3,3"/>

                            <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding IsChecked, ElementName=LoopedApngCheckBox, Converter={StaticResource Bool2Visibility}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="RepeatForeverApngCheckBox" Margin="20,3,3,3"
                                                            Text="{DynamicResource S.SaveAs.GifOptions.RepeatForever}" IsChecked="{Binding RepeatForeverApng, Source={x:Static u:UserSettings.All}}"/>

                                <n:IntegerUpDown Grid.Row="1" Grid.Column="0" x:Name="RepeatCountApngIntegerUpDown" Margin="20,3,3,3" StepValue="1" Minimum="1" Maximum="100" 
                                                         Value="{Binding Source={x:Static u:UserSettings.All}, Path=RepeatCountApng, Mode=TwoWay}" MinWidth="45" 
                                                         IsEnabled="{Binding IsChecked, ElementName=RepeatForeverApngCheckBox, Converter={StaticResource InvertedBool}}"/>
                                <Label Margin="0,3" Grid.Column="1" Content="{DynamicResource S.SaveAs.GifOptions.RepeatCount}" Grid.Row="1" Foreground="#FF444444" 
                                               IsEnabled="{Binding IsChecked, ElementName=RepeatForeverApngCheckBox, Converter={StaticResource InvertedBool}}"/>
                            </Grid>

                            <n:ExtendedCheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Name="DetectApngCheckBox" Margin="10,3,3,3" Text="{DynamicResource S.SaveAs.ApngOptions.DetectUnchanged}" 
                                                        IsChecked="{Binding DetectUnchanged, Source={x:Static u:UserSettings.All}}"
                                                        Visibility="{Binding IsChecked, ElementName=NormalApngEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <n:ExtendedCheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" x:Name="PaintTransparentApngCheckBox" Margin="20,3,3,3" Text="{DynamicResource S.SaveAs.ApngOptions.PaintTransparent}" 
                                                        IsChecked="{Binding PaintTransparent, Source={x:Static u:UserSettings.All}}">
                                <n:ExtendedCheckBox.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolAndToVisibility}">
                                        <Binding ElementName="DetectApngCheckBox" Path="IsChecked" />
                                        <Binding ElementName="NormalApngEncoderRadioButton" Path="IsChecked"/>
                                    </MultiBinding>
                                </n:ExtendedCheckBox.Visibility>
                            </n:ExtendedCheckBox>

                            <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource S.SaveAs.Extras}" VerticalAlignment="Center" Padding="0" Margin="10,3,3,3"
                                           Visibility="{Binding IsChecked, ElementName=FfmpegApngEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <n:ExtendedTextBox Grid.Row="4" Grid.Column="1" MinHeight="23" Margin="5,3" Text="{Binding Source={x:Static u:UserSettings.All}, Path=ExtraParametersApngFFmpeg}"
                                                       Visibility="{Binding IsChecked, ElementName=FfmpegApngEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow"/>
                        </Grid>
                    </Expander>


                    <Expander Grid.Row="3" Header="{DynamicResource S.SaveAs.VideoOptions}" Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}"
                                      IsExpanded="{Binding IsVideoOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.SaveAs.Quality}" VerticalAlignment="Center" Padding="0"
                                           Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                            <Slider Grid.Row="0" Grid.Column="1" x:Name="AviQualitySlider" Margin="3,5" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" 
                                            Maximum="20000" Minimum="1" Value="{Binding AviQuality, Mode=TwoWay, Source={x:Static u:UserSettings.All}}" 
                                            SmallChange="1" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                            Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.SaveAs.Extras}" VerticalAlignment="Center" Padding="0"
                                           Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                            <n:ExtendedCheckBox Grid.Row="1" Grid.Column="1" x:Name="FlipVideoCheckBox" Text="{DynamicResource S.SaveAs.FlipVertically}"
                                                        IsChecked="{Binding FlipVideo, Mode=TwoWay, Source={x:Static u:UserSettings.All}}" Margin="3"
                                                        Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource S.SaveAs.VideoOptions.Fps}" VerticalAlignment="Center" Padding="0"
                                           Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                            <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="FpsNumericUpDown" Minimum="1" Maximum="60" Margin="5,3" MinWidth="80" 
                                                     HorizontalAlignment="Left" Value="{Binding Source={x:Static u:UserSettings.All}, Path=OutputFramerate, Mode=TwoWay}"
                                                     Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource S.SaveAs.Extras}" VerticalAlignment="Center" Padding="0"
                                           Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                            <n:ExtendedTextBox Grid.Row="3" Grid.Column="1" MinHeight="23" Margin="5,3" Text="{Binding Source={x:Static u:UserSettings.All}, Path=ExtraParameters}"
                                                       Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow"/>
                        </Grid>
                    </Expander>


                    <Expander Grid.Row="3" Header="{DynamicResource S.SaveAs.PsdOptions}" Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}"
                                      IsExpanded="{Binding IsPsdOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:ExtendedCheckBox Grid.Row="0" x:Name="CompressPsdCheckBox" Text="{DynamicResource S.SaveAs.PsdOptions.Compress}" 
                                                        IsChecked="{Binding CompressImage, Source={x:Static u:UserSettings.All}}" Margin="10,3,3,3"
                                                        ToolTip="{DynamicResource S.SaveAs.PsdOptions.Compress.Tooltip}"/>

                            <n:ExtendedCheckBox Grid.Row="1" x:Name="TimelinePsdCheckBox" Text="{DynamicResource S.SaveAs.PsdOptions.Timeline}" 
                                                        IsChecked="{Binding SaveTimeline, Source={x:Static u:UserSettings.All}}" Margin="10,3,3,3"
                                                        ToolTip="{DynamicResource S.SaveAs.PsdOptions.Timeline.Tooltip}" Visibility="Collapsed"/>
                        </Grid>
                    </Expander>


                    <Expander Grid.Row="5" Header="{DynamicResource S.SaveAs.SaveOptions}" IsExpanded="{Binding IsSaveOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid>
                            <Grid Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=PickLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            CheckedChanged="SaveType_Checked"/>

                                <Grid Grid.Row="1" Visibility="{Binding ElementName=SaveFileCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSave, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <n:ExtendedCheckBox Grid.Row="1" Text="{DynamicResource S.SaveAs.SaveOptions.ProjectToo}" Margin="20,3,3,3"
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveAsProjectToo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <n:ExtendedCheckBox Grid.Row="2" x:Name="UploadFileCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.UploadFile}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=UploadFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox Grid.Column="0" Name="UploadComboBox" Margin="20,3,3,3" Height="23" SelectedValuePath="Tag"
                                                      SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=LatestUploadService, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      Visibility="{Binding IsChecked, ElementName=UploadFileCheckBox, Converter={StaticResource Bool2Visibility}}" ToolTip="{DynamicResource S.SaveAs.SaveOptions.UploadDestination}">
                                        <ComboBoxItem Tag="{x:Static u:UploadService.None}" Content="{DynamicResource S.Upload.Pick.Destination}"/>
                                        <ComboBoxItem Tag="{x:Static u:UploadService.ImgurAnonymous}" Content="{DynamicResource S.Upload.Imgur.Anonymous}"/>
                                        <ComboBoxItem Tag="{x:Static u:UploadService.Imgur}" Content="Imgur"/>
                                        <ComboBoxItem Tag="{x:Static u:UploadService.GyfcatAnonymous}" Content="{DynamicResource S.Upload.Gyfcat.Anonymous}"/>
                                        <ComboBoxItem Tag="{x:Static u:UploadService.Yandex}" Content="YandexDisk"/>
                                    </ComboBox>
                                </Grid>

                                <n:ExtendedCheckBox Grid.Row="4" x:Name="CopyFileCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboard}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                <WrapPanel Grid.Row="5" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFileCheckBox, Converter={StaticResource Bool2Visibility}}">
                                    <n:ImageRadioButton x:Name="CopyFileRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFolderPathRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFilePathRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyLinkRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.Link}"
                                                                IsChecked="{Binding LatestCopyType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.Link}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.Link.Info}"/>
                                </WrapPanel>

                                <n:ExtendedCheckBox Grid.Row="6" x:Name="CustomCommandsCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=ExecuteCustomCommands, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <n:ExtendedTextBox Grid.Row="7" x:Name="CustomCommandsTextBox" MinHeight="23" Margin="20,3,3,3" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" 
                                                           AcceptsReturn="True" Text="{Binding Source={x:Static u:UserSettings.All}, Path=CustomCommands, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           Visibility="{Binding IsChecked, ElementName=CustomCommandsCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                           ToolTip="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands.Info}"/>
                            </Grid>

                            <Grid Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileApngCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=PickLocationApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            CheckedChanged="SaveType_Checked"/>

                                <Grid Grid.Row="1" Visibility="{Binding ElementName=SaveFileApngCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSaveApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <n:ExtendedCheckBox Grid.Row="1" Text="{DynamicResource S.SaveAs.SaveOptions.ProjectToo}" Margin="20,3,3,3"
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveAsProjectTooApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <n:ExtendedCheckBox Grid.Row="2" x:Name="CopyFileApngCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboardApng}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                <WrapPanel Grid.Row="3" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFileApngCheckBox, Converter={StaticResource Bool2Visibility}}">
                                    <n:ImageRadioButton x:Name="CopyFileApngRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyTypeApng, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFolderPathApngRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyTypeApng, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFilePathApngRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyTypeApng, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                </WrapPanel>

                                <n:ExtendedCheckBox Grid.Row="4" x:Name="CustomCommandsApngCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=ExecuteCustomCommandsApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <n:ExtendedTextBox Grid.Row="5" x:Name="CustomCommandsApngTextBox" MinHeight="23" Margin="20,3,3,3" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" 
                                                           AcceptsReturn="True" Text="{Binding Source={x:Static u:UserSettings.All}, Path=CustomCommandsApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           Visibility="{Binding IsChecked, ElementName=CustomCommandsApngCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                           ToolTip="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands.Info}"/>
                            </Grid>

                            <Grid Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileVideoCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=PickLocationVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            CheckedChanged="SaveType_Checked"/>

                                <Grid Grid.Row="1" Visibility="{Binding ElementName=SaveFileVideoCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSaveVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <n:ExtendedCheckBox Grid.Row="1" Text="{DynamicResource S.SaveAs.SaveOptions.ProjectToo}" Margin="20,3,3,3"
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveAsProjectTooVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <n:ExtendedCheckBox Grid.Row="2" x:Name="CopyFileVideoCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboardVideo}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                <WrapPanel Grid.Row="3" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFileVideoCheckBox, Converter={StaticResource Bool2Visibility}}">
                                    <n:ImageRadioButton x:Name="CopyFileVideoRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyTypeVideo, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFolderPathVideoRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyTypeVideo, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFilePathVideoRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyTypeVideo, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                </WrapPanel>

                                <n:ExtendedCheckBox Grid.Row="4" x:Name="CustomCommandsVideoCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=ExecuteCustomCommandsVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <n:ExtendedTextBox Grid.Row="5" x:Name="CustomCommandsVideoTextBox" MinHeight="23" Margin="20,3,3,3" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" 
                                                           AcceptsReturn="True" Text="{Binding Source={x:Static u:UserSettings.All}, Path=CustomCommandsVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           Visibility="{Binding IsChecked, ElementName=CustomCommandsVideoCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                           ToolTip="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands.Info}"/>
                            </Grid>

                            <Grid Visibility="{Binding IsChecked, ElementName=ProjectRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileProjectCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="True" IsEnabled="False"/>

                                <Grid Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSaveProject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <n:ExtendedCheckBox Grid.Row="2" x:Name="CopyFileProjectCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboardProject}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                <WrapPanel Grid.Row="3" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFileProjectCheckBox, Converter={StaticResource Bool2Visibility}}">
                                    <n:ImageRadioButton x:Name="CopyFileProjectRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyTypeProject, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFolderPathProjectRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyTypeProject, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFilePathProjectRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyTypeProject, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                </WrapPanel>
                            </Grid>

                            <Grid Visibility="{Binding IsChecked, ElementName=ImagesRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileImagesCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="True" IsEnabled="False"/>

                                <Grid Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSaveImages, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </Grid>

                            <Grid Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFilePsdCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=PickLocationPhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            CheckedChanged="SaveType_Checked"/>

                                <Grid Grid.Row="1" Visibility="{Binding ElementName=SaveFilePsdCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSavePhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <n:ExtendedCheckBox Grid.Row="1" Text="{DynamicResource S.SaveAs.SaveOptions.ProjectToo}" Margin="20,3,3,3"
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveAsProjectTooPhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <n:ExtendedCheckBox Grid.Row="2" x:Name="CopyFilePsdCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboardPhotoshop}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                <WrapPanel Grid.Row="3" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFilePsdCheckBox, Converter={StaticResource Bool2Visibility}}">
                                    <n:ImageRadioButton x:Name="CopyFilePsdRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyTypePhotoshop, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFolderPathPsdRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyTypePhotoshop, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="CopyFilePathPsdRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyTypePhotoshop, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                </WrapPanel>

                                <n:ExtendedCheckBox Grid.Row="4" x:Name="CustomCommandsPsdCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=ExecuteCustomCommandsPhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <n:ExtendedTextBox Grid.Row="5" x:Name="CustomCommandsPsdTextBox"  MinHeight="23" Margin="20,3,3,3" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" 
                                                           AcceptsReturn="True" Text="{Binding Source={x:Static u:UserSettings.All}, Path=CustomCommandsPhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           Visibility="{Binding IsChecked, ElementName=CustomCommandsPsdCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                           ToolTip="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands.Info}"/>
                            </Grid>
                        </Grid>
                    </Expander>

                    <n:LabelSeparator Grid.Row="6" x:Name="FileLabelSeparator" Text="{DynamicResource S.SaveAs.File}">
                        <n:LabelSeparator.Visibility>
                            <MultiBinding Converter="{StaticResource BoolOrAndToVisibility}">
                                <Binding ElementName="GifRadioButton" Path="IsChecked"/>
                                <Binding ElementName="SaveFileCheckBox" Path="IsChecked"/>
                                <Binding ElementName="ApngRadioButton" Path="IsChecked"/>
                                <Binding ElementName="SaveFileApngCheckBox" Path="IsChecked"/>
                                <Binding ElementName="VideoRadioButton" Path="IsChecked"/>
                                <Binding ElementName="SaveFileVideoCheckBox" Path="IsChecked"/>
                                <Binding ElementName="ProjectRadioButton" Path="IsChecked"/>
                                <Binding ElementName="SaveFileProjectCheckBox" Path="IsChecked"/>
                                <Binding ElementName="ImagesRadioButton" Path="IsChecked"/>
                                <Binding ElementName="SaveFileImagesCheckBox" Path="IsChecked"/>
                                <Binding ElementName="PsdRadioButton" Path="IsChecked"/>
                                <Binding ElementName="SaveFilePsdCheckBox" Path="IsChecked"/>
                            </MultiBinding>
                        </n:LabelSeparator.Visibility>
                    </n:LabelSeparator>

                    <Grid Grid.Row="7" Margin="10,0,0,0" Visibility="{Binding ElementName=FileLabelSeparator, Path=Visibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputApngFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestApngOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputVideoFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestVideoOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputImagesFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestImageOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=ImagesRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputProjectFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestProjectOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=ProjectRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputPsdFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestPhotoshopOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ImageButton Grid.Column="1" Style="{StaticResource Style.Button.NoText}" Content="{StaticResource Vector.Open}" ContentWidth="20"
                                                   Click="ChooseLocation_Click" ToolTip="{DynamicResource S.SaveAs.File.Choose}"
                                                   ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>

                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:ExtendedCheckBox Grid.Row="0" x:Name="AutoGenerateFileNameCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.AutoGenerateFilename}" Margin="0,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=AutoGenerateFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputApngFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestApngFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputVideoFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestVideoFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputImagesFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestImageFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=ImagesRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputProjectFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestProjectFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=ProjectRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="OutputPsdFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestPhotoshopFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                            <ComboBox Grid.Column="1" Name="FileTypeComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.gif'}"
                                              Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                <s:String>.gif</s:String>
                            </ComboBox>

                            <ComboBox Grid.Column="1" Name="FileTypeApngComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestApngExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.png'}"
                                              Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                <s:String>.png</s:String>
                                <s:String>.apng</s:String>
                            </ComboBox>

                            <ComboBox Grid.Column="1" Name="FileTypeVideoComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestVideoExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.mp4'}"
                                              Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                <s:String>.avi</s:String>
                                <s:String>.mp4</s:String>
                                <s:String>.webm</s:String>
                                <s:String>.wmv</s:String>
                            </ComboBox>

                            <ComboBox Grid.Column="1" Name="FileTypeImageComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestImageExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.png'}"
                                              Visibility="{Binding IsChecked, ElementName=ImagesRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                <s:String>.zip</s:String>
                                <s:String>.png</s:String>
                            </ComboBox>

                            <ComboBox Grid.Column="1" Name="FileTypeProjectComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestProjectExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.stg'}"
                                              Visibility="{Binding IsChecked, ElementName=ProjectRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                <s:String>.stg</s:String>
                                <s:String>.zip</s:String>
                            </ComboBox>

                            <ComboBox Grid.Column="1" Name="FileTypePsdComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestPhotoshopExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.psd'}"
                                              Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                <s:String>.psd</s:String>
                            </ComboBox>

                            <n:ImageButton Grid.Column="2" x:Name="IncreaseCountButton" Style="{StaticResource Style.Button.NoText}" 
                                                   Content="{StaticResource Vector.Add}" ContentWidth="15" Click="IncreaseNumber_Click"
                                                   ToolTip="{DynamicResource S.SaveAs.File.Increase}" ToolTipService.Placement="Bottom"/>
                            <n:ImageButton Grid.Column="3" x:Name="DecreaseCountButton" Style="{StaticResource Style.Button.NoText}" 
                                                   Content="{StaticResource Vector.Subtract}" ContentWidth="15" Click="DecreaseNumber_Click"
                                                   ToolTip="{DynamicResource S.SaveAs.File.Decrease}" ToolTipService.Placement="Bottom"/>
                        </Grid>
                    </Grid>

                    <Grid Grid.Row="8" Name="FileExistsGrid" Visibility="Collapsed" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Row="0" Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Warning}" />
                        <TextBlock Grid.Row="0" Grid.Column="1" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="11" Padding="3" TextWrapping="WrapWithOverflow">
                                    
                                    <Hyperlink Click="FileHyperlink_OnClick" ToolTip="{DynamicResource Encoder.OpenFile}" Cursor="Hand">
                                        <Run Text="{DynamicResource S.SaveAs.File.Exists}"/>
                                    </Hyperlink>
                        </TextBlock>
                    </Grid>
                </Grid>

                <Grid x:Name="LoadRecentGrid" Visibility="Collapsed" Height="{Binding ElementName=ActionScrollViewer, Path=ActualHeight, FallbackValue=100}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Recent.Projects}" Margin="5,0" Padding="0,5"/>
                    <DataGrid Grid.Row="1" x:Name="RecentDataGrid" Margin="10,5,5,5" MinHeight="60" SelectionMode="Single" SelectionUnit="FullRow" MouseDoubleClick="RecentDataGrid_MouseDoubleClick" PreviewKeyDown="RecentDataGrid_PreviewKeyDown">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{DynamicResource Recent.CreationDate}" Width="*" IsReadOnly="True" Binding="{Binding Path=CreationDate, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:G}', ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}"/>
                            <DataGridTextColumn Header="{DynamicResource Recent.FrameCount}" Width="100" IsReadOnly="True" Binding="{Binding Path=Frames.Count, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>

                <Grid x:Name="ClipboardGrid" Visibility="Collapsed" Height="{Binding ElementName=ActionScrollViewer, Path=ActualHeight, FallbackValue=100}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Clipboard.Entries}"/>
                    <ListBox Grid.Row="1" x:Name="ClipboardListBox" Margin="10,5,5,5" MinHeight="60" VerticalAlignment="Stretch" 
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.Resources>
                            <ContextMenu x:Key="ClipboardContextMenu">
                                <n:ImageMenuItem Header="{DynamicResource Clipboard.Entry}" Image="{StaticResource Vector.Paste}" ContentHeight="16" ContentWidth="16" IsHitTestVisible="False"/>
                                <Separator/>
                                <n:ImageMenuItem Header="{DynamicResource Clipboard.Explore}" Image="{StaticResource Vector.Open}" ContentHeight="16" ContentWidth="16" Command="u:Commands.ExploreClipboard"/>
                                <n:ImageMenuItem Header="{DynamicResource Clipboard.Remove}" Image="{StaticResource Vector.Remove}" ContentHeight="16" ContentWidth="16" Command="u:Commands.RemoveClipboardEntry"/>
                            </ContextMenu>
                        </ListBox.Resources>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="ContextMenu" Value="{StaticResource ClipboardContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Clipboard.Behavior}"/>
                    <RadioButton Grid.Row="3" x:Name="PasteBeforeRadioButton" Content="{DynamicResource Clipboard.Before}" Margin="10,5,5,5" 
                                         IsChecked="{Binding PasteBehavior, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:PasteBehavior.BeforeSelected}}"/>
                    <RadioButton Grid.Row="4" x:Name="PasteAfterRadioButton" Content="{DynamicResource Clipboard.After}" Margin="10,5,5,5"
                                         IsChecked="{Binding PasteBehavior, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:PasteBehavior.AfterSelected}}"/>
                </Grid>

                <Grid x:Name="ResizeGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Resize.CurrentProperties}"/>
                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10,0,0,0">
                        <Label x:Name="CurrentWidthLabel" Content="100"/>
                        <Label Content="x"/>
                        <Label x:Name="CurrentHeightLabel" Content="100"/>
                        <Label Content="•"/>
                        <Label x:Name="CurrentDpiLabel" Content="100"/>
                        <Label Content="{DynamicResource Resize.Dpi}"/>
                    </StackPanel>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Resize.NewProperties}"/>
                    <Grid Grid.Row="3" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Resize.Dpi2}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="DpiNumericUpDown" Minimum="72" Maximum="1000" Margin="10,5" MinWidth="70"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource ImportVideo.Width}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="WidthResizeNumericUpDown" Minimum="1" Maximum="5000" Margin="10,5" 
                                                 MinWidth="70" ValueChanged="WidthResizeIntegerUpDown_ValueChanged"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource ImportVideo.Height}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="HeightResizeNumericUpDown" Minimum="1" Maximum="5000" Margin="10,5" 
                                                 MinWidth="70" ValueChanged="HeightResizeIntegerUpDown_ValueChanged"/>

                        <Viewbox Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" Child="{StaticResource Vector.No}" MaxHeight="25"
                                     Visibility="{Binding ElementName=KeepAspectCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    </Grid>

                    <CheckBox Grid.Row="4" x:Name="KeepAspectCheckBox" Content="{DynamicResource Resize.KeepAspect}" Margin="10,5" IsChecked="True" 
                                      Checked="KeepAspectCheckBox_Checked"/>
                </Grid>

                <Grid x:Name="CropGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Preview}"/>
                    <Image Grid.Row="1" x:Name="CropImage" Height="120" Stretch="Uniform" Margin="10,5,5,5" Effect="{StaticResource Shadow.Black.Large}"/>
                    <Label Grid.Row="2" x:Name="CropSizeLabel" Content="0 × 0" HorizontalAlignment="Center" Padding="2"/>

                    <n:LabelSeparator Grid.Row="3" Text="{DynamicResource Crop.Points}"/>
                    <Grid Grid.Row="4" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Crop.Top}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="TopCropNumericUpDown" Minimum="0" Margin="10,3" MinWidth="70"
                                                 ValueChanged="CropIntegerUpDown_ValueChanged">
                            <n:IntegerUpDown.Maximum>
                                <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                    <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                    <Binding ElementName="BottomCropNumericUpDown" Path="Value" />
                                    <Binding ElementName="BottomCropNumericUpDown" Path="Minimum" FallbackValue="0"/>
                                </MultiBinding>
                            </n:IntegerUpDown.Maximum>
                        </n:IntegerUpDown>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Crop.Left}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="LeftCropNumericUpDown" Minimum="0" Margin="10,3" MinWidth="70"
                                                 ValueChanged="CropIntegerUpDown_ValueChanged">
                            <n:IntegerUpDown.Maximum>
                                <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                    <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                    <Binding ElementName="RightCropNumericUpDown" Path="Value" />
                                    <Binding ElementName="RightCropNumericUpDown" Path="Minimum" FallbackValue="0"/>
                                </MultiBinding>
                            </n:IntegerUpDown.Maximum>
                        </n:IntegerUpDown>

                        <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Crop.Bottom}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="BottomCropNumericUpDown" Minimum="10" Margin="10,3" 
                                                 MinWidth="70" ValueChanged="CropIntegerUpDown_ValueChanged">
                            <n:IntegerUpDown.Maximum>
                                <MultiBinding Converter="{StaticResource MaximumValueConverter}">
                                    <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                    <Binding ElementName="CropAreaGrid" Path="Height" FallbackValue="0"/>
                                    <!--<Binding ElementName="TopCropNumericUpDown" Path="Value" FallbackValue="0"/>-->
                                </MultiBinding>
                            </n:IntegerUpDown.Maximum>
                        </n:IntegerUpDown>

                        <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Crop.Right}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="RightCropNumericUpDown" Minimum="10" Margin="10,3" 
                                                 MinWidth="70" ValueChanged="CropIntegerUpDown_ValueChanged">
                            <n:IntegerUpDown.Maximum>
                                <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                    <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                    <Binding ElementName="CropAreaGrid" Path="Width" FallbackValue="0"/>
                                    <!--<Binding ElementName="LeftCropNumericUpDown" Path="Value" FallbackValue="0"/>-->
                                </MultiBinding>
                            </n:IntegerUpDown.Maximum>
                        </n:IntegerUpDown>
                    </Grid>
                </Grid>

                <Grid x:Name="FlipRotateGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Editor.Image.FlipRotate}"/>
                    <Grid Grid.Row="1" Margin="10,0" HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <n:ImageRadioButton Grid.Row="0" x:Name="FlipHorizontalRadioButton" Text="{DynamicResource FlipRotate.FlipHorizontal}"
                                                    Content="{StaticResource Vector.FlipHorizontal}" Cursor="Hand" MaxSize="25" Padding="0,5"
                                                    IsChecked="True"/>

                        <n:ImageRadioButton Grid.Row="1" x:Name="FlipVerticalRadioButton" Text="{DynamicResource FlipRotate.FlipVertical}"
                                                    Content="{StaticResource Vector.FlipVertical}" Cursor="Hand" MaxSize="25" Padding="0,5"/>


                        <n:ImageRadioButton Grid.Row="2" x:Name="RotateLeftRadioButton" Text="{DynamicResource FlipRotate.RotateLeft}"
                                                    Content="{StaticResource Vector.RotateLeft90}" Cursor="Hand" MaxSize="25" Padding="0,5"/>


                        <n:ImageRadioButton Grid.Row="3" x:Name="RotateRightRadioButton" Text="{DynamicResource FlipRotate.RotateRight}"
                                                    Content="{StaticResource Vector.RotateRight90}" Cursor="Hand" MaxSize="25" Padding="0,5"/>
                    </Grid>
                </Grid>

                <Grid x:Name="CaptionGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Caption.Text}"/>
                    <n:ExtendedTextBox Grid.Row="1" x:Name="CaptionTextBox" Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                               Text="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionText}"/>

                    <Expander Grid.Row="2" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsCaptionFontGroupExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" x:Name="CaptionFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionFontFamily}">
                                <ComboBox.ItemsSource>
                                    <Binding Source="{StaticResource MyFonts}"/>
                                </ComboBox.ItemsSource>

                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="CaptionFontStyleComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontStyle" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionFontStyle}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                            </ComboBox>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="2" Grid.Column="1" x:Name="CaptionFontWeightComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontWeight" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionFontWeight}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}" />
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                            </ComboBox>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="CaptionFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionFontSize, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                            <n:ColorBox Grid.Row="4" Grid.Column="1" x:Name="CaptionFontColorBox" Margin="10,5"
                                                SelectedColor="{Binding CaptionFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Expander>

                    <Expander Grid.Row="3" Header="{DynamicResource Caption.Outline}" IsExpanded="{Binding IsCaptionOutlineGroupExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="CaptionOutlineThicknessNumericUpDown" Minimum="0" Maximum="20" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionOutlineThickness, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                            <n:ColorBox Grid.Row="1" Grid.Column="1" x:Name="CaptionOutlineColorBox" Margin="10,5"
                                                SelectedColor="{Binding CaptionOutlineColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Expander>

                    <Expander Grid.Row="4" Header="{DynamicResource Caption.Layout}" IsExpanded="{Binding IsCaptionLayoutGroupExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" x:Name="CaptionVerticalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"
                                              SelectedValuePath="VerticalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionVerticalAligment, Mode=TwoWay}">

                                <TextBlock VerticalAlignment="Top" Text="{DynamicResource S.VerticalAlignment.Top}"/>
                                <TextBlock VerticalAlignment="Center" Text="{DynamicResource S.VerticalAlignment.Center}"/>
                                <TextBlock VerticalAlignment="Bottom" Text="{DynamicResource S.VerticalAlignment.Bottom}"/>
                            </ComboBox>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="CaptionHorizontalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                              SelectedValuePath="HorizontalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionHorizontalAligment, Mode=TwoWay}">

                                <TextBlock HorizontalAlignment="Left" Text="{DynamicResource S.HorizontalAlignment.Left}"/>
                                <TextBlock HorizontalAlignment="Center" Text="{DynamicResource S.HorizontalAlignment.Center}"/>
                                <TextBlock HorizontalAlignment="Right" Text="{DynamicResource S.HorizontalAlignment.Right}"/>
                            </ComboBox>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="CaptionMarginNumericUpDown" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionMargin, Mode=TwoWay}"/>
                        </Grid>
                    </Expander>
                </Grid>

                <Grid x:Name="FreeTextGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Caption.Text}"/>
                    <n:ExtendedTextBox Grid.Row="1" x:Name="FreeTextTextBox"  Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                               Text="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextText, Mode=TwoWay}"
                                               TextChanged="FreeTextTextBox_OnTextChanged"/>

                    <Expander Grid.Row="2" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsFreeTextFontGroupExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" x:Name="FreeTextFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" 
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextFontFamily, Mode=TwoWay}">
                                <ComboBox.ItemsSource>
                                    <Binding Source="{StaticResource MyFonts}" />
                                </ComboBox.ItemsSource>

                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="FreeTextFontStyleComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontStyle" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextFontStyle, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                            </ComboBox>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="2" Grid.Column="1" x:Name="FreeTextFontWeightComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontWeight" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextFontWeight, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}"/>
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                            </ComboBox>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="FreeTextFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextFontSize, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                            <n:ColorBox Grid.Row="4" Grid.Column="1" x:Name="FreeTextFontColorBox" Margin="10,5"
                                                SelectedColor="{Binding FreeTextFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Expander>

                    <n:LabelSeparator Grid.Row="3" Text="{DynamicResource Caption.Layout}"/>
                    <Grid Grid.Row="4" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Crop.Left}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeTextPositionXNumericUpDown" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding ElementName=FreeTextOverlayControl, Path=Left, Converter={StaticResource DoubleToIntConverter}, Mode=TwoWay, FallbackValue=0}"
                                                 Maximum="{Binding ElementName=FreeTextOverlayControl, Path=ActualWidth, FallbackValue=1000}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Crop.Top}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeTextPositionYNumericUpDown" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding ElementName=FreeTextOverlayControl, Path=Top, Converter={StaticResource DoubleToIntConverter}, Mode=TwoWay, FallbackValue=0}"
                                                 Maximum="{Binding ElementName=FreeTextOverlayControl, Path=ActualHeight, FallbackValue=1000}"/>
                    </Grid>
                </Grid>

                <Grid x:Name="TitleFrameGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Caption.Text}"/>
                    <n:ExtendedTextBox Grid.Row="1" x:Name="TitleFrameTextBox" Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                               Text="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameText, Mode=TwoWay}"/>

                    <Expander Grid.Row="2" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsTitleFrameFontGroupExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" x:Name="TitleFrameFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameFontFamily, Mode=TwoWay}">
                                <ComboBox.ItemsSource>
                                    <Binding Source="{StaticResource MyFonts}" />
                                </ComboBox.ItemsSource>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="TitleFrameFontStyleComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontStyle" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameFontStyle, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                            </ComboBox>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="2" Grid.Column="1" x:Name="TitleFrameFontWeightComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontWeight" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameFontWeight, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}" />
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                            </ComboBox>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="TitleFrameFontSizeNumericUpDown" Minimum="5" Maximum="200" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameFontSize, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                            <n:ColorBox Grid.Row="4" Grid.Column="1" x:Name="TitleFrameFontColorBox" Margin="10,5"
                                                SelectedColor="{Binding TitleFrameFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </Expander>

                    <n:LabelSeparator Grid.Row="3" Text="{DynamicResource String.Delay}"/>
                    <Grid Grid.Row="4" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Column="1" x:Name="TitleFrameDelayIntegerUpDown" Minimum="10" Maximum="25500" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameDelay, Mode=TwoWay}"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="5" Text="{DynamicResource Caption.Layout}"/>
                    <Grid Grid.Row="6" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                        <ComboBox Grid.Row="0" Grid.Column="1" x:Name="TitleFrameVerticalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="150"
                                          SelectedValuePath="VerticalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameVerticalAligment, Mode=TwoWay}">

                            <TextBlock VerticalAlignment="Top" Text="{DynamicResource S.VerticalAlignment.Top}"/>
                            <TextBlock VerticalAlignment="Center" Text="{DynamicResource S.VerticalAlignment.Center}"/>
                            <TextBlock VerticalAlignment="Bottom" Text="{DynamicResource S.VerticalAlignment.Bottom}"/>
                        </ComboBox>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" x:Name="TitleFrameHorizontalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" 
                                          SelectedValuePath="HorizontalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameHorizontalAligment, Mode=TwoWay}">

                            <TextBlock HorizontalAlignment="Left" Text="{DynamicResource S.HorizontalAlignment.Left}"/>
                            <TextBlock HorizontalAlignment="Center" Text="{DynamicResource S.HorizontalAlignment.Center}"/>
                            <TextBlock HorizontalAlignment="Right" Text="{DynamicResource S.HorizontalAlignment.Right}"/>
                        </ComboBox>

                        <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="TitleFrameMarginNumericUpDown" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameMargin, Mode=TwoWay}"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="7" Text="{DynamicResource String.Background}"/>
                    <Grid Grid.Row="8" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                        <n:ColorBox Grid.Row="0" Grid.Column="1" x:Name="TitleFrameBackgroundColorBox" Margin="10,5"
                                            SelectedColor="{Binding TitleFrameBackgroundColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </Grid>

                <Grid x:Name="KeyStrokesGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Expander Grid.Row="0" Header="{DynamicResource KeyStrokes.Keys}" IsExpanded="{Binding IsKeyStrokesKeysExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ImageButton Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource KeyStrokes.Edit}" Content="{StaticResource Vector.Pen}"
                                                   Margin="0,3" ContentHeight="16" HorizontalAlignment="Center" Padding="5" Click="EditKeyStrokesButton_Click"/>

                            <n:ExtendedCheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource KeyStrokes.IgnoreModifiers}" Margin="0,5"
                                                        IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesIgnoreNonModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        ToolTip="{DynamicResource KeyStrokes.IgnoreModifiers.Info}"/>

                            <n:ExtendedCheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource KeyStrokes.Extend}" Margin="0,5"
                                                        IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesExtended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="10,0,0,0" 
                                                Visibility="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesExtended, Converter={StaticResource Bool2Visibility}}">
                                <Label Content="{DynamicResource KeyStrokes.By}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Minimum="10" Maximum="1000" Margin="5" MinWidth="70" Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <n:ExtendedCheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource KeyStrokes.Earlier}" Margin="0,5"
                                                        IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesEarlier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="10,0,0,0" 
                                                Visibility="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesEarlier, Converter={StaticResource Bool2Visibility}}">
                                <Label Content="{DynamicResource KeyStrokes.By}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Minimum="10" Maximum="1000" Margin="5" MinWidth="70" Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesEarlierBy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <Label Grid.Row="6" Grid.Column="0" Content="{DynamicResource KeyStrokes.Separator}" VerticalAlignment="Center" Padding="0"/>
                            <n:ExtendedTextBox Grid.Row="6" Grid.Column="1" Margin="5,3" MinWidth="70"
                                                       Text="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Expander>

                    <Expander Grid.Row="1" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsKeyStrokesFontExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontFamily}">
                                <ComboBox.ItemsSource>
                                    <Binding Source="{StaticResource MyFonts}"/>
                                </ComboBox.ItemsSource>

                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" Margin="10,5" MinWidth="100" SelectedValuePath="FontStyle" 
                                              SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontStyle}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                            </ComboBox>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="2" Grid.Column="1" Margin="10,5" MinWidth="100" SelectedValuePath="FontWeight" 
                                              SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontWeight}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}" />
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                            </ComboBox>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="3" Grid.Column="1" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontSize, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                            <n:ColorBox Grid.Row="4" Grid.Column="1" SelectedColor="{Binding KeyStrokesFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>
                        </Grid>
                    </Expander>

                    <Expander Grid.Row="2" Header="{DynamicResource Caption.Outline}" IsExpanded="{Binding IsKeyStrokesOutlineExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="0" Grid.Column="1" Minimum="0" Maximum="20" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesOutlineThickness, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                            <n:ColorBox Grid.Row="1" Grid.Column="1" SelectedColor="{Binding KeyStrokesOutlineColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Background}" VerticalAlignment="Center" Padding="0"/>
                            <n:ColorBox Grid.Row="2" Grid.Column="1" SelectedColor="{Binding KeyStrokesBackgroundColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>
                        </Grid>
                    </Expander>

                    <Expander Grid.Row="3" Header="{DynamicResource Caption.Layout}" IsExpanded="{Binding IsKeyStrokesLayoutExpanded, Source={x:Static u:UserSettings.All}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" Margin="10,5" MinWidth="100" MaxWidth="150" SelectedValuePath="VerticalAlignment" 
                                              SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesVerticalAligment, Mode=TwoWay}">

                                <TextBlock VerticalAlignment="Top" Text="{DynamicResource S.VerticalAlignment.Top}"/>
                                <TextBlock VerticalAlignment="Center" Text="{DynamicResource S.VerticalAlignment.Center}"/>
                                <TextBlock VerticalAlignment="Bottom" Text="{DynamicResource S.VerticalAlignment.Bottom}"/>
                                <TextBlock VerticalAlignment="Stretch" Text="{DynamicResource S.Alignment.Stretch}"/>
                            </ComboBox>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" Margin="10,5" MinWidth="100" MaxWidth="150" SelectedValuePath="HorizontalAlignment" 
                                              SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesHorizontalAligment, Mode=TwoWay}">

                                <TextBlock HorizontalAlignment="Left" Text="{DynamicResource S.HorizontalAlignment.Left}"/>
                                <TextBlock HorizontalAlignment="Center" Text="{DynamicResource S.HorizontalAlignment.Center}"/>
                                <TextBlock HorizontalAlignment="Right" Text="{DynamicResource S.HorizontalAlignment.Right}"/>
                                <TextBlock HorizontalAlignment="Stretch" Text="{DynamicResource S.Alignment.Stretch}"/>
                            </ComboBox>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="2" Grid.Column="1" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesMargin, Mode=TwoWay}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource String.Padding}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="3" Grid.Column="1" Minimum="0" Maximum="100" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesPadding, Mode=TwoWay}"/>
                        </Grid>
                    </Expander>
                </Grid>

                <Grid x:Name="FreeDrawingGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource FreeDrawing.Mode}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="PenModeRadioButton" Content="{StaticResource Vector.Pen}" 
                                                    Text="{DynamicResource FreeDrawing.Pen}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>
                        <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EraserModeRadioButton" Content="{StaticResource Vector.Eraser}" 
                                                    Text="{DynamicResource FreeDrawing.Eraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                        <n:ImageRadioButton Grid.Row="1" Grid.Column="0" x:Name="SelectorModeRadioButton" Content="{StaticResource Vector.Select}" 
                                                    Text="{DynamicResource FreeDrawing.Select}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                        <n:ImageRadioButton Grid.Row="1" Grid.Column="1" x:Name="EraserStrokeModeRadioButton" Content="{StaticResource Vector.StrokeEraser}" 
                                                    Text="{DynamicResource FreeDrawing.StrokeEraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource FreeDrawing.Pen}" Visibility="{Binding ElementName=PenModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    <Grid Grid.Row="3" Margin="10,0,0,0" Visibility="{Binding ElementName=PenModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeDrawingWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingPenWidth, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeDrawingHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingPenHeight, Mode=TwoWay}"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                        <n:ColorBox Grid.Row="2" Grid.Column="1" x:Name="FreeDrawingColorBox" Margin="10,5"
                                            SelectedColor="{Binding FreeDrawingColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                        <Grid Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleRadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingStylusTip, Source={x:Static u:UserSettings.All},
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                            <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EllipseRadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingStylusTip, Source={x:Static u:UserSettings.All},
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                        </Grid>

                        <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource FreeDrawing.Other}" VerticalAlignment="Center" Padding="0"/>
                        <CheckBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" x:Name="IsHighLighterCheckBox" Content="{DynamicResource FreeDrawing.Highlighter}" Margin="5"
                                          IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingIsHighlighter, Mode=TwoWay}"/>
                        <CheckBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" x:Name="FitToCurveCheckBox" Content="{DynamicResource FreeDrawing.FitToCurve}" Margin="5"
                                          IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingFitToCurve, Mode=TwoWay}"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="4" Text="{DynamicResource FreeDrawing.Eraser}" Visibility="{Binding ElementName=EraserModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    <Grid Grid.Row="5" Margin="10,0,0,0" Visibility="{Binding ElementName=EraserModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeDrawingEraserWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingEraserWidth, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeDrawingEraserHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingEraserHeight, Mode=TwoWay}"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                        <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleEraserRadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingEraserStylusTip, Source={x:Static u:UserSettings.All},
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                            <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="ElipseEraserRadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingEraserStylusTip, Source={x:Static u:UserSettings.All},
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                        </Grid>
                    </Grid>
                </Grid>

                <Grid x:Name="ShapesGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource FreeDrawing.Mode}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="AddModeRadioButton" Content="{StaticResource Vector.Add}" Margin="0,3" 
                                                    Text="{DynamicResource S.Shapes.Mode.Insert}" Cursor="Hand" MaxSize="20" Padding="0,5" IsChecked="True" Checked="ShapeModes_Checked"/>

                        <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="SelectModeRadioButton" Content="{StaticResource Vector.Select}" Margin="0,3"
                                                    Text="{DynamicResource FreeDrawing.Select}" Cursor="Hand" MaxSize="20" Padding="0,5" Checked="ShapeModes_Checked"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource S.Shapes.Shapes}" Visibility="{Binding ElementName=AddModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    <Grid Grid.Row="3" Margin="10,0,5,0" Visibility="{Binding ElementName=AddModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                        <ListBox x:Name="ShapesListBox" SelectedIndex="0" SelectionChanged="ShapeType_SelectionChanged">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <Rectangle Width="25" Height="20" Stroke="DarkSlateGray" Fill="White"/>
                            <Ellipse Width="25" Height="20" Stroke="DarkSlateGray" Fill="White"/>
                            <h:Triangle Width="25" Height="20" Stroke="DarkSlateGray" Fill="White"/>
                            <h:Arrow Width="25" Height="20" Stroke="DarkSlateGray" Fill="White" X1="1" Y1="1" X2="10" Y2="10"/>
                        </ListBox>
                    </Grid>

                    <n:LabelSeparator Grid.Row="4" Text="{DynamicResource Caption.Outline}"/>
                    <Grid Grid.Row="5" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                        <n:DoubleUpDown Grid.Row="0" Grid.Column="1" x:Name="ShapeOutlineDoubleUpDown" Minimum="0" Maximum="100" Margin="10,5" MinWidth="70" 
                                                Value="{Binding Source={x:Static u:UserSettings.All}, Path=ShapesThickness, Mode=TwoWay}" UpdateOnInput="True" ValueChanged="ShapeProperties_Changed"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                        <n:ColorBox Grid.Row="1" Grid.Column="1" x:Name="ShapeOutlineColorBox" Margin="10,5"
                                            SelectedColor="{Binding ShapesOutlineColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            ColorChanged="ShapeProperties_Changed"/>

                        <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource S.Shapes.Shapes.Radius}" VerticalAlignment="Center" Padding="0"/>
                        <n:DoubleUpDown Grid.Row="3" Grid.Column="1" x:Name="ShapeRadiusDoubleUpDown" Minimum="0" Maximum="100" Margin="10,5" MinWidth="70" 
                                                Value="{Binding Source={x:Static u:UserSettings.All}, Path=ShapesRadius, Mode=TwoWay}" UpdateOnInput="True" ValueChanged="ShapeProperties_Changed"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="6" Text="{DynamicResource S.Shapes.Fill}"/>
                    <Grid Grid.Row="7" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                        <n:ColorBox Grid.Row="0" Grid.Column="1" x:Name="ShapesFillColorBox" Margin="10,5"
                                            SelectedColor="{Binding ShapesFillColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            ColorChanged="ShapeProperties_Changed"/>
                    </Grid>
                </Grid>

                <Grid x:Name="MouseClicksGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Border.Appearance}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!--Format(rectangle, circle, perforated circle), edit clicks? -->
                        <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource Caption.Style}" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="10,5" MinWidth="100" SelectedValuePath="FontStyle" 
                                          SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontStyle}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                
                                                <Viewbox Margin="2">
                                                    <ContentPresenter Content="{Binding Tag}"/>
                                                </Viewbox>

                                                <TextBlock Grid.Column="1" FontSize="14" Text="{Binding Text}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>

                                    <TextBlock Text="Ellipse" Tag="{StaticResource Vector.Ellipse}"/>
                                    <TextBlock Text="Rectangle" Tag="{StaticResource Vector.Rectangle}"/>
                                </ComboBox>-->

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource Caption.Color}" VerticalAlignment="Center"/>
                        <n:ColorBox Grid.Row="1" Grid.Column="1" SelectedColor="{Binding Source={x:Static u:UserSettings.All}, Path=MouseClicksColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center"/>
                        <n:DoubleUpDown Grid.Row="2" Grid.Column="1" x:Name="ClickWidthDoubleUpDown" Minimum="1" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                Value="{Binding Source={x:Static u:UserSettings.All}, Path=MouseClicksWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center"/>
                        <n:DoubleUpDown Grid.Row="3" Grid.Column="1" x:Name="ClickHeightDoubleUpDown" Minimum="1" Maximum="1000" Margin="10,5" MinWidth="70"
                                                Value="{Binding Source={x:Static u:UserSettings.All}, Path=MouseClicksHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </Grid>

                <Grid x:Name="WatermarkGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Watermark.Image}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="35"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Watermark.File}" VerticalAlignment="Center" Padding="0"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" x:Name="ImagePathLabel" Margin="3" Padding="0" FontStyle="Italic" Foreground="#FF09012B" VerticalAlignment="Center"
                                           Text="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkFilePath, Converter={StaticResource PathToFilenameConverter}}" TextWrapping="WrapWithOverflow"
                                           ToolTip="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkFilePath}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="1" Grid.Column="1" x:Name="SelectWatermarkButton" Text="{DynamicResource FreeDrawing.Select}" 
                                               HorizontalAlignment="Right" Content="{StaticResource Vector.Image}" ContentWidth="20"
                                               Margin="5,3" MinWidth="70" Padding="2,5" Click="SelectWatermark_Click"/>
                    </Grid>

                    <Grid Grid.Row="2" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Watermark.Opacity}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="OpacityWatermarkNumericUpDown"  
                                                 Minimum="1" Maximum="100" Margin="5" Width="70" HorizontalAlignment="Left"
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkOpacity, 
                                                 Converter={StaticResource DoubleTimesAHundredToIntConverter}, Mode=TwoWay, FallbackValue=70}"/>
                        <Label Grid.Row="0" Grid.Column="2" Content="%" VerticalAlignment="Center" Padding="0"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource ImportVideo.Scale}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="SizeWatermarkNumericUpDown" 
                                                 Minimum="1" Maximum="200" Margin="5" Width="70" HorizontalAlignment="Left"
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkSize, 
                                                 Converter={StaticResource DoubleTimesAHundredToIntConverter}, Mode=TwoWay, FallbackValue=100}"/>
                        <Label Grid.Row="1" Grid.Column="2" Content="%" VerticalAlignment="Center" Padding="0"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="3" Text="{DynamicResource Crop.Points}"/>
                    <Grid Grid.Row="4" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Crop.Top}" VerticalAlignment="Center" Padding="0"/>
                        <n:DoubleUpDown Grid.Row="0" Grid.Column="1" x:Name="TopWatermarkDoubleUpDown" Minimum="-999" Margin="10,3" MinWidth="70"
                                                Maximum="{Binding ElementName=EditorWindow, Path=FrameSize.Height, FallbackValue=1000, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Crop.Left}" VerticalAlignment="Center" Padding="0"/>
                        <n:DoubleUpDown Grid.Row="1" Grid.Column="1" x:Name="LeftWatermarkDoubleUpDown" Minimum="-999" Margin="10,3" MinWidth="70"
                                                Maximum="{Binding ElementName=EditorWindow, Path=FrameSize.Width, FallbackValue=1000, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </Grid>

                <Grid x:Name="BorderGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Border.Appearance}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                        <n:ColorBox Grid.Row="0" Grid.Column="1" x:Name="BorderColorBox" Margin="10,5"
                                            SelectedColor="{Binding BorderColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Top}" MaxWidth="15" MaxHeight="15"/>
                                <n:IntegerUpDown Grid.Column="1" x:Name="BorderTopThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                         Value="{Binding Source={x:Static u:UserSettings.All}, Path=BorderTopThickness, Mode=TwoWay}"/>
                            </Grid>

                            <Viewbox Grid.Row="1" Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Left}" MaxWidth="15" MaxHeight="15" Margin="5,0,0,0"/>
                            <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="BorderLeftThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=BorderLeftThickness, Mode=TwoWay}"/>

                            <Viewbox Grid.Row="1" Grid.Column="3" Child="{StaticResource Vector.Arrow.Blue.Right}" MaxWidth="15" MaxHeight="15"/>
                            <n:IntegerUpDown Grid.Row="1" Grid.Column="2" x:Name="BorderRightThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=BorderRightThickness, Mode=TwoWay}"/>

                            <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Bottom}" MaxWidth="15" MaxHeight="15"/>
                                <n:IntegerUpDown Grid.Column="1" x:Name="BorderBottomThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                         Value="{Binding Source={x:Static u:UserSettings.All}, Path=BorderBottomThickness, Mode=TwoWay}"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>

                <Grid x:Name="ObfuscateGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource S.Obfuscate.Options}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.Obfuscate.PixelSize}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="PixelSizeIntegerUpDown" Minimum="2" Maximum="100" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=PixelSize, Mode=TwoWay}"/>

                        <n:ExtendedCheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" x:Name="UseMedianCheckBox" Text="{DynamicResource S.Obfuscate.UseAverage}"
                                                    IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=UseMedian}" Margin="3,5"/>
                    </Grid>

                    <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}"/>
                        <TextBlock Grid.Column="1" Text="{DynamicResource S.Obfuscate.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                    </Grid>
                </Grid>

                <Grid x:Name="ProgressGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="23"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="23"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="23"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Progress.Type}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <n:ImageRadioButton Grid.Column="0" x:Name="BarRadioButton" Content="{StaticResource Vector.Progress}" Text="{DynamicResource Progress.Type.Bar}" 
                                                    IsChecked="{Binding ProgressType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, 
                                                    ConverterParameter={x:Static u:ProgressType.Bar}}"/>

                        <n:ImageRadioButton Grid.Column="1" x:Name="TextRadioButton" Content="{StaticResource Vector.FreeText}" Text="{StaticResource Progress.Type.Text}"
                                                    IsChecked="{Binding ProgressType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, 
                                                    ConverterParameter={x:Static u:ProgressType.Text}}"/>
                    </Grid>

                    <Expander Grid.Row="2" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsProgressFontGroupExpanded, Source={x:Static u:UserSettings.All}}"
                                      Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2Visibility}}">
                        <Grid Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" x:Name="ProgressFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFontFamily, Mode=TwoWay}">
                                <ComboBox.ItemsSource>
                                    <Binding Source="{StaticResource MyFonts}" />
                                </ComboBox.ItemsSource>

                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressFontStyleComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontStyle" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFontStyle, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                            </ComboBox>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                            <ComboBox Grid.Row="2" Grid.Column="1" x:Name="ProgressFontWeightComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontWeight" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFontWeight, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                            <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}" />
                                        </VirtualizingStackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                                <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                            </ComboBox>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                            <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="ProgressFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFontSize, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                            <n:ColorBox Grid.Row="4" Grid.Column="1" SelectedColor="{Binding ProgressFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>
                        </Grid>
                    </Expander>

                    <n:LabelSeparator Grid.Row="3" Text="{DynamicResource Border.Appearance}"/>
                    <Grid Grid.Row="4" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Color}" VerticalAlignment="Center" Padding="0"/>
                        <n:ColorBox Grid.Row="0" Grid.Column="1" SelectedColor="{Binding ProgressColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Progress.Precision}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressPrecisionComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                          SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressPrecision, Mode=TwoWay}"
                                          Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2Visibility}}"
                                          SelectionChanged="ProgressPrecisionComboBox_SelectionChanged">
                            <ComboBoxItem Content="{DynamicResource Progress.Precision.Minutes}"/>
                            <ComboBoxItem Content="{DynamicResource Progress.Precision.Seconds}"/>
                            <ComboBoxItem Content="{DynamicResource Progress.Precision.Miliseconds}"/>
                            <ComboBoxItem Content="{DynamicResource Progress.Precision.Percentage}"/>
                            <ComboBoxItem Content="{DynamicResource Progress.Precision.Count}"/>
                            <ComboBoxItem Content="{DynamicResource Progress.Precision.Custom}"/>
                        </ComboBox>

                        <CheckBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Content="{DynamicResource Progress.Precision.ShowTotal}" Margin="10,5,5,5"
                                          IsChecked="{Binding ProgressShowTotal, Source={x:Static u:UserSettings.All}, Mode=TwoWay}"
                                          Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                        <Label Grid.Row="2" Grid.Column="0" x:Name="ProgressFormatLabel" Content="{DynamicResource Progress.Format}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding ElementName=ProgressPrecisionComboBox, Path=SelectedIndex, Converter={StaticResource IntToVisibility}, ConverterParameter=5}"/>
                        <n:ExtendedTextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" x:Name="CustomProgressTextBox" Margin="10,5"
                                                   Text="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFormat, Mode=TwoWay}"
                                                   Visibility="{Binding ElementName=ProgressPrecisionComboBox, Path=SelectedIndex, Converter={StaticResource IntToVisibility}, ConverterParameter=5}"
                                                   TextChanged="CustomProgressTextBox_TextChanged">
                            <n:ExtendedTextBox.ToolTip>
                                <n:HeaderedTooltip Header="Format" StaysOpen="True">
                                    <Run Text="$ms = miliseconds"/>
                                    <LineBreak/>
                                    <Run Text="$s = seconds"/>
                                    <LineBreak/>
                                    <Run Text="$m = minutes"/>
                                    <LineBreak/>
                                    <Run Text="$p = percentage"/>
                                    <LineBreak/>
                                    <Run Text="$f = frame number"/>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Run Text="Totals:" FontWeight="SemiBold"/>
                                    <LineBreak/>
                                    <Run Text="@ms, @s, @m, @p, @f"/>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Run Text="Examples:" FontWeight="SemiBold"/>
                                    <LineBreak/>
                                    <Run Text="'$s/@s s' = 2/10 s"/>
                                    <LineBreak/>
                                    <Run Text="'$p/@p%' = 25/100%"/>
                                </n:HeaderedTooltip>
                            </n:ExtendedTextBox.ToolTip>
                        </n:ExtendedTextBox>

                        <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                        <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="ProgressThicknessNumericUpDown" Minimum="1" Maximum="30" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding ProgressThickness, Source={x:Static u:UserSettings.All}, Mode=TwoWay}"
                                                 Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="5" Text="{DynamicResource Caption.Layout}"/>
                    <Grid Grid.Row="6" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                        <ComboBox Grid.Row="0" Grid.Column="1" x:Name="ProgressVerticalComboBox" Margin="10,5" MinWidth="100" MaxWidth="150"
                                          SelectedValuePath="VerticalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressVerticalAligment, Mode=TwoWay}">

                            <TextBlock VerticalAlignment="Top" Text="{DynamicResource S.VerticalAlignment.Top}"/>
                            <TextBlock VerticalAlignment="Center" Text="{DynamicResource S.VerticalAlignment.Center}"/>
                            <TextBlock VerticalAlignment="Bottom" Text="{DynamicResource S.VerticalAlignment.Bottom}"/>
                        </ComboBox>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressHorizontalComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" 
                                          SelectedValuePath="HorizontalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressHorizontalAligment, Mode=TwoWay}">

                            <TextBlock HorizontalAlignment="Left" Text="{DynamicResource S.HorizontalAlignment.Left}"/>
                            <TextBlock HorizontalAlignment="Center" Text="{DynamicResource S.HorizontalAlignment.Center}"/>
                            <TextBlock HorizontalAlignment="Right" Text="{DynamicResource S.HorizontalAlignment.Right}"/>
                        </ComboBox>

                        <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Progress.Orientation}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                        <ComboBox Grid.Row="2" Grid.Column="1" x:Name="ProgressOrientationComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                          SelectedValuePath="Tag" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressOrientation, Mode=TwoWay}"
                                          Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2Visibility}}">

                            <TextBlock Text="{DynamicResource S.Orientation.Horizontal}">
                                <TextBlock.Tag>
                                    <x:Static Member="Orientation.Horizontal"/>
                                </TextBlock.Tag>
                            </TextBlock>
                            <TextBlock Text="{DynamicResource S.Orientation.Vertical}">
                                <TextBlock.Tag>
                                    <x:Static Member="Orientation.Vertical"/>
                                </TextBlock.Tag>
                            </TextBlock>
                        </ComboBox>
                    </Grid>
                </Grid>

                <Grid x:Name="CinemagraphGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource FreeDrawing.Mode}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="PenMode2RadioButton" Content="{StaticResource Vector.Pen}" 
                                                    Text="{DynamicResource FreeDrawing.Pen}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>
                        <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EraserMode2RadioButton" Content="{StaticResource Vector.Eraser}" 
                                                    Text="{DynamicResource FreeDrawing.Eraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                        <n:ImageRadioButton Grid.Row="1" Grid.Column="0" x:Name="SelectorMode2RadioButton" Content="{StaticResource Vector.Select}" 
                                                    Text="{DynamicResource FreeDrawing.Select}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                        <n:ImageRadioButton Grid.Row="1" Grid.Column="1" x:Name="EraserStrokeMode2RadioButton" Content="{StaticResource Vector.StrokeEraser}" 
                                                    Text="{DynamicResource FreeDrawing.StrokeEraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource FreeDrawing.Pen}" Visibility="{Binding ElementName=PenMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    <Grid Grid.Row="3" Margin="10,0,0,0" 
                                  Visibility="{Binding ElementName=PenMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="CinemagraphWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphPenWidth, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="CinemagraphHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphPenHeight, Mode=TwoWay}"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                        <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="Rectangle2RadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphStylusTip, Source={x:Static u:UserSettings.All}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                            <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="Ellipse2RadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphStylusTip, Source={x:Static u:UserSettings.All}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                        </Grid>

                        <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource FreeDrawing.Other}" VerticalAlignment="Center" Padding="0"/>
                        <CheckBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" x:Name="FitToCurve2CheckBox" Content="{DynamicResource FreeDrawing.FitToCurve}" Margin="5"
                                          IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphFitToCurve, Mode=TwoWay}"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource FreeDrawing.Eraser}" Visibility="{Binding ElementName=EraserMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    <Grid Grid.Row="3" Margin="10,0,0,0"
                                  Visibility="{Binding ElementName=EraserMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="CinemagraphEraserWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphEraserWidth, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="CinemagraphEraserHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphEraserHeight, Mode=TwoWay}"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                        <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleEraser2RadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphEraserStylusTip, Source={x:Static u:UserSettings.All}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                            <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="ElipseEraser2RadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphEraserStylusTip, Source={x:Static u:UserSettings.All}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                        </Grid>
                    </Grid>

                    <Grid Grid.Row="4" Grid.Column="0" Margin="10,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                        <TextBlock Grid.Column="1" Text="{DynamicResource Cinemagraph.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                    </Grid>
                </Grid>

                <Grid x:Name="OverrideDelayGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Delay.NewValue}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="NewDelayIntegerUpDown" Minimum="10" Maximum="25500" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=OverrideDelay, Mode=TwoWay}"/>
                    </Grid>

                    <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                        <TextBlock Grid.Column="1" Text="{DynamicResource OverrideDelay.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                    </Grid>
                </Grid>

                <Grid x:Name="IncreaseDecreaseDelayGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Delay.DecreaseIncrease}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.ValueMs}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="IncreaseDecreaseDelayIntegerUpDown" Minimum="-10000" Maximum="10000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=IncrementDecrementDelay, Mode=TwoWay}"/>
                    </Grid>

                    <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                        <TextBlock Grid.Column="1" Text="{DynamicResource IncreaseDecreaseDelay.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                    </Grid>
                </Grid>
                <Grid x:Name="ScaleDelayGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Delay.Scale}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.ScaleValue}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="ScaleDelayIntegerUpDown" Minimum="1" Maximum="1000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=ScaleDelay, Mode=TwoWay}"/>
                        <Label Grid.Row="0" Grid.Column="2" Content="%" VerticalAlignment="Center" HorizontalAlignment="Left"  Padding="0"/>
                    </Grid>

                    <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                        <TextBlock Grid.Column="1" Text="{DynamicResource ScaleDelay.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                    </Grid>
                </Grid>

                <Grid x:Name="FadeGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Transitions.FadeTo}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="FadeToFrameRadioButton" Content="{StaticResource Vector.Image}" 
                                                    IsChecked="{Binding FadeToType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:FadeToType.NextFrame}}"
                                                    Text="{DynamicResource Transitions.FadeTo.Frame}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                        <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="FadeToColorRadioButton" Content="{StaticResource Vector.Colors}" 
                                                    IsChecked="{Binding FadeToType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:FadeToType.Color}}"
                                                    Text="{DynamicResource Transitions.FadeTo.Color}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Transitions.Color}" Visibility="{Binding ElementName=FadeToColorRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    <Grid Grid.Row="3" Margin="10,0,0,0" Visibility="{Binding ElementName=FadeToColorRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                        <n:ColorBox Grid.Row="0" Grid.Column="1" SelectedColor="{Binding FadeToColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>
                    </Grid>

                    <n:LabelSeparator Grid.Row="4" Text="{DynamicResource Transitions.Lenght}"/>
                    <Slider Grid.Row="5" Grid.Column="0" x:Name="FadeSlider" Margin="10,5,5,5" Minimum="1" Maximum="25" 
                                    AutoToolTipPlacement="TopLeft" SmallChange="1" IsSnapToTickEnabled="True"
                                    Value="{Binding Source={x:Static u:UserSettings.All}, Path=FadeTransitionLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <n:LabelSeparator Grid.Row="6" Text="{DynamicResource Transitions.Delay}"/>
                    <Grid Grid.Row="7" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="FadeDelayIntegerUpDown" Minimum="10" Maximum="25500" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FadeTransitionDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>

                    <Grid Grid.Row="8" Margin="5,3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" x:Name="TransitionImage" 
                                       Source="{Binding ElementName=ZoomBoxControl, Path=ImageSource, Converter={StaticResource UriToBitmapConverter}}" Stretch="Uniform"
                                       Effect="{StaticResource Shadow.Black.Large}"/>

                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding ElementName=FadeSlider, Path=Value, StringFormat='{} {0}x'}" 
                                           FontSize="16" Padding="2,0" Foreground="#FF289746" VerticalAlignment="Center"/>

                        <Viewbox Grid.Row="1" Grid.Column="1" Child="{StaticResource Vector.Arrow.Blue.Right}" MaxWidth="13" MaxHeight="15"/>

                        <Border Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" BorderThickness="0" 
                                        Background="{Binding FadeToColor, Source={x:Static u:UserSettings.All}, Converter={StaticResourceExtension ColorToBrush}}"
                                        Width="{Binding ElementName=TransitionImage, Path=ActualWidth, Mode=OneWay}" Height="{Binding ElementName=TransitionImage, Path=ActualHeight, Mode=OneWay}"
                                        Effect="{StaticResource Shadow.Black.Large}" Visibility="{Binding ElementName=FadeToColorRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>

                        <TextBlock Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Text="{DynamicResource Transitions.FadeTo.Frame}"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Visibility="{Binding ElementName=FadeToFrameRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                    </Grid>

                    <Grid Grid.Row="9" Grid.Column="0" Margin="10,10,5,0"
                                  Visibility="{Binding ElementName=FadeToFrameRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                        <TextBlock Grid.Column="1" Text="{DynamicResource Transitions.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                    </Grid>
                </Grid>

                <Grid x:Name="SlideGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Transitions.Lenght}"/>
                    <Slider Grid.Row="1" Grid.Column="0" x:Name="SlideSlider" Minimum="1" Maximum="20" 
                                    AutoToolTipPlacement="TopLeft" SmallChange="1" IsSnapToTickEnabled="True" Margin="10,5,5,5"/>

                    <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Transitions.Delay}"/>
                    <Grid Grid.Row="3" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="SlideDelayIntegerUpDown" Minimum="10" Maximum="25500" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=SlideTransitionDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>

                    <Grid Grid.Row="4" Margin="5,3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" x:Name="TransitionImage2" 
                                       Source="{Binding ElementName=ZoomBoxControl, Path=ImageSource, Converter={StaticResource UriToBitmapConverter}}" Stretch="Uniform"
                                       Effect="{StaticResource Shadow.Black.Large}"/>

                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding ElementName=SlideSlider, Path=Value, StringFormat='{} {0}x'}" 
                                           FontSize="16" Padding="2,0" Foreground="#FF289746" VerticalAlignment="Center"/>

                        <Viewbox Grid.Row="1" Grid.Column="1" Child="{StaticResource Vector.Arrow.Blue.Right}" MaxWidth="13" MaxHeight="15"/>

                        <!--Background="{Binding FadeToColor, Source={x:Static u:UserSettings.All}, Converter={StaticResourceExtension ColorToBrush}}"-->
                        <Border Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" BorderThickness="0" 
                                        Width="{Binding ElementName=TransitionImage, Path=ActualWidth, Mode=OneWay}" Height="{Binding ElementName=TransitionImage, Path=ActualHeight, Mode=OneWay}"
                                        Effect="{StaticResource Shadow.Black.Large}" Visibility="{Binding ElementName=FadeToColorRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>

                        <TextBlock Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Text="{DynamicResource Transitions.FadeTo.Frame}"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>

                    <!--<Grid Grid.Row="2" Visibility="Visible">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Column="0" x:Name="FromRightRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>

                                <n:ImageRadioButton Grid.Column="1" x:Name="FromTopRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Column="2" x:Name="FromLeftRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Column="3" x:Name="FromBottomRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                            </Grid>-->

                    <Grid Grid.Row="5" Margin="10,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                        <TextBlock Grid.Column="1" Text="{DynamicResource Transitions.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                    </Grid>
                </Grid>

                <Grid x:Name="ReduceGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Reduce.Header}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Reduce.Factor}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="ReduceFactorIntegerUpDown" Minimum="1" Maximum="20" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=ReduceFactor, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Reduce.Count}" VerticalAlignment="Center" Padding="0"/>
                        <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="ReduceCountIntegerUpDown" Minimum="1" Maximum="20" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=ReduceCount, Mode=TwoWay}"/>
                    </Grid>

                    <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                        <TextBlock Grid.Column="1" x:Name="ReduceTextBlock" Foreground="#FF289746" Tag="{DynamicResource Reduce.Info}"
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource FormatConverter}">
                                    <Binding ElementName="ReduceTextBlock" Path="Tag"/>
                                    <Binding Source="{x:Static u:UserSettings.All}" Path="ReduceCount"/>
                                    <Binding Source="{x:Static u:UserSettings.All}" Path="ReduceFactor"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </Grid>

                <Grid x:Name="RemoveDuplicatesGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Content="{DynamicResource S.RemoveDuplicates.Header}" Style="{StaticResource LabelSeparator}"/>
                    <Grid Grid.Row="1" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.RemoveDuplicates.Similarity}" VerticalAlignment="Center" Padding="0"/>
                        <n:DoubleUpDown Grid.Row="0" Grid.Column="1" x:Name="DuplicatesSimilarityDoubleUpDown" Minimum="0.1" Maximum="100" Margin="10,5" MinWidth="80" 
                                                Value="{Binding Source={x:Static u:UserSettings.All}, Path=DuplicatesSimilarity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.RemoveDuplicates.Removal}" VerticalAlignment="Center" Padding="0"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="10,5" 
                                          SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=DuplicatesRemoval, Converter={StaticResource EnumToInt}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Removal.First}"/>
                            <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Removal.Last}"/>
                        </ComboBox>

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource S.RemoveDuplicates.Delay}" VerticalAlignment="Center"/>
                        <ComboBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="10,5" 
                                          SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=DuplicatesDelay, Converter={StaticResource EnumToInt}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Delay.NoAdjustment}"/>
                            <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Delay.Average}"/>
                            <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Delay.Sum}"/>
                        </ComboBox>
                    </Grid>

                    <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                        <TextBlock Grid.Column="1" x:Name="DuplicatesTextBlock" Foreground="#FF289746" Tag="{DynamicResource S.RemoveDuplicates.Info}"
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource FormatConverter}">
                                    <Binding ElementName="DuplicatesTextBlock" Path="Tag"/>
                                    <Binding Source="{x:Static u:UserSettings.All}" Path="DuplicatesSimilarity"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </Grid>
            </Grid>
        </ScrollViewer>

        <!--Apply/Save or Cancel-->
        <Grid Grid.Row="2" x:Name="ActionLowerGrid" Background="WhiteSmoke" Height="44">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <n:ImageButton Grid.Column="0" x:Name="ApplyButton" Text="{DynamicResource Action.Apply}" Padding="2,0" MinWidth="90" KeyGesture="Alt + E / Enter"
                                   FontSize="13" Margin="5" ContentHeight="22" Content="{StaticResource Vector.Ok}" Command="u:Commands.OkAction"/>

            <n:ImageButton Grid.Column="1" x:Name="CancelButton" Text="{DynamicResource Action.Cancel}" Padding="2,0" MinWidth="90" KeyGesture="Esc"
                                   FontSize="13" Margin="5" ContentHeight="22" Content="{StaticResource Vector.Cancel}" Command="u:Commands.CancelAction"/>
        </Grid>
    </Grid>
</UserControl>
